Coverage Report by instance with details

=================================================================================
=== Instance: /top/SPI_Slave_if
=== Design Unit: work.SPI_Slave_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         56        56         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/SPI_Slave_if --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                       cs_sva[2-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                      rx_data[9-0]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                      tx_data[7-0]           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         28 
Toggled Node Count   =         28 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (56 of 56 bins)

=================================================================================
=== Instance: /top/SPI_gm_if
=== Design Unit: work.SPI_gm_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         32        32         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/SPI_gm_if --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                           MISO_gm           1           1      100.00 
                                               clk           1           1      100.00 
                                    cs_sva_gm[2-0]           1           1      100.00 
                                   rx_data_gm[9-0]           1           1      100.00 
                                       rx_valid_gm           1           1      100.00 

Total Node Count     =         16 
Toggled Node Count   =         16 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (32 of 32 bins)

=================================================================================
=== Instance: /top/GM
=== Design Unit: work.SLAVE_GM
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        47        45         2    95.74%

================================Branch Details================================

Branch Coverage for instance /top/GM

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_GM.v
------------------------------------IF Branch------------------------------------
    28                                      3888     Count coming in to IF
    28              1                        526         if(!rst_n)  
    30              1                       3362         else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    36                                      7822     Count coming in to CASE
    37              1                       1732             IDLE: ns = (SS_n == 0) ? CHK_CMD : IDLE;
    39              1                       1299             CHK_CMD: begin
    48              1                       2333             WRITE: ns = (SS_n == 1) ? IDLE : WRITE;
    49              1                       1961             READ_ADD: ns = (SS_n == 1) ? IDLE : READ_ADD;
    50              1                        496             READ_DATA: ns = (SS_n == 1) ? IDLE : READ_DATA;
    51              1                          1             default: ns = IDLE;
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    37                                      1731     Count coming in to IF
    37              2                        862             IDLE: ns = (SS_n == 0) ? CHK_CMD : IDLE;
    37              3                        869             IDLE: ns = (SS_n == 0) ? CHK_CMD : IDLE;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    40                                      1299     Count coming in to IF
    40              1                         45                 if (SS_n == 1) 
    42              1                        862                 else if (MOSI == 0)
    44              1                        392                 else
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    45                                       392     Count coming in to IF
    45              1                         81                     ns = (add_exist) ? READ_DATA : READ_ADD;
    45              2                        311                     ns = (add_exist) ? READ_DATA : READ_ADD;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                      2333     Count coming in to IF
    48              2                        424             WRITE: ns = (SS_n == 1) ? IDLE : WRITE;
    48              3                       1909             WRITE: ns = (SS_n == 1) ? IDLE : WRITE;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    49                                      1961     Count coming in to IF
    49              2                        311             READ_ADD: ns = (SS_n == 1) ? IDLE : READ_ADD;
    49              3                       1650             READ_ADD: ns = (SS_n == 1) ? IDLE : READ_ADD;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    50                                       496     Count coming in to IF
    50              2                         81             READ_DATA: ns = (SS_n == 1) ? IDLE : READ_DATA;
    50              3                        415             READ_DATA: ns = (SS_n == 1) ? IDLE : READ_DATA;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    57                                      9610     Count coming in to IF
    57              1                        526         if (!rst_n) begin
    68              1                       9084         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    73                                      9084     Count coming in to IF
    73              1                        914             if (SS_n) begin
    79              1                       8170             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    81                                      8170     Count coming in to CASE
    82              1                        862                     IDLE: begin
    88              1                       3260                     WRITE :begin 
    97              1                       2503                     READ_ADD: begin
    108             1                        728                      READ_DATA : begin
                                             817     All False Count
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    89                                      3260     Count coming in to IF
    89              1                       3260                      if (counter_in < 10) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    94                                      3260     Count coming in to IF
    94              1                        263                      if (counter_in == 9)
                                            2997     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    98                                      2503     Count coming in to IF
    98              1                       2360                        if (counter_in < 10) begin // excute 10 time 
                                             143     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    103                                     2503     Count coming in to IF
    103             1                        185                      if (counter_in == 9)   // at 10th time 
                                            2318     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    109                                      728     Count coming in to IF
    109             1                        579                      if (counter_in < 10) begin
                                             149     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    114                                      728     Count coming in to IF
    114             1                         44                      if (counter_in == 9)
                                             684     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    118                                      728     Count coming in to IF
    118             1                         21                      if ( tx_valid  ) begin
                                             707     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    128                                     8170     Count coming in to IF
    128             1                        128                 if (start_out && (counter_out < 8)) begin
    132             1                    ***0***                 else if (counter_out >= 8 ) begin
                                            8042     All False Count
Branch totals: 2 hits of 3 branches = 66.66%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       9         6         3    66.66%

================================Condition Details================================

Condition Coverage for instance /top/GM --

  File SPI_GM.v
----------------Focused Condition View-------------------
Line       89 Item    1  (counter_in < 10)
Condition totals: 0 of 1 input term covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_in < 10)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (counter_in < 10)_0   -                             
  Row   2:          1  (counter_in < 10)_1   -                             

----------------Focused Condition View-------------------
Line       94 Item    1  (counter_in == 9)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_in == 9)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_in == 9)_0   -                             
  Row   2:          1  (counter_in == 9)_1   -                             

----------------Focused Condition View-------------------
Line       98 Item    1  (counter_in < 10)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_in < 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_in < 10)_0   -                             
  Row   2:          1  (counter_in < 10)_1   -                             

----------------Focused Condition View-------------------
Line       103 Item    1  (counter_in == 9)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_in == 9)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_in == 9)_0   -                             
  Row   2:          1  (counter_in == 9)_1   -                             

----------------Focused Condition View-------------------
Line       109 Item    1  (counter_in < 10)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_in < 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_in < 10)_0   -                             
  Row   2:          1  (counter_in < 10)_1   -                             

----------------Focused Condition View-------------------
Line       114 Item    1  (counter_in == 9)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_in == 9)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_in == 9)_0   -                             
  Row   2:          1  (counter_in == 9)_1   -                             

----------------Focused Condition View-------------------
Line       128 Item    1  (start_out && (counter_out < 8))
Condition totals: 1 of 2 input terms covered = 50.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
          start_out         Y
  (counter_out < 8)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  start_out_0           -                             
  Row   2:          1  start_out_1           (counter_out < 8)             
  Row   3:    ***0***  (counter_out < 8)_0   start_out                     
  Row   4:          1  (counter_out < 8)_1   start_out                     

----------------Focused Condition View-------------------
Line       132 Item    1  (counter_out >= 8)
Condition totals: 0 of 1 input term covered = 0.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (counter_out >= 8)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_out >= 8)_0  -                             
  Row   2:    ***0***  (counter_out >= 8)_1  -                             


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top/GM --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  37                IDLE                   0
  39             CHK_CMD                   2
  49            READ_ADD                   3
  50           READ_DATA                   4
  48               WRITE                   1
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                1440          
                 CHK_CMD                 862          
                READ_ADD                 605          
               READ_DATA                 158          
                   WRITE                 823          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  37                   0                 862          IDLE -> CHK_CMD               
  45                   1                 311          CHK_CMD -> READ_ADD           
  45                   2                  81          CHK_CMD -> READ_DATA          
  43                   3                 425          CHK_CMD -> WRITE              
  41                   4                  45          CHK_CMD -> IDLE               
  49                   5                 311          READ_ADD -> IDLE              
  50                   6                  81          READ_DATA -> IDLE             
  48                   7                 424          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      44        43         1    97.72%

================================Statement Details================================

Statement Coverage for instance /top/GM --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_GM.v
    1                                                module SLAVE_GM #(
    2                                                    parameter IDLE = 3'b000, 
    3                                                    parameter CHK_CMD = 3'b010, 
    4                                                    parameter WRITE = 3'b001, 
    5                                                    parameter READ_ADD = 3'b011, 
    6                                                    parameter READ_DATA = 3'b100
    7                                                )(
    8                                                    input MOSI, SS_n, clk, rst_n,
    9                                                    input tx_valid,
    10                                                   input [7:0] tx_data,
    11                                                   output reg rx_valid,
    12                                                   output reg [9:0] rx_data,
    13                                                   output reg MISO ,
    14                                                   output wire [2:0] cs_sva  // for SVA to monitor the current state
    15                                                   
    16                                               
    17                                               );
    18                                               
    19                                               reg [2:0] cs, ns;
    20                                               reg add_exist;
    21                                               reg [3:0] counter_in;
    22                                               reg [2:0] counter_out;
    23                                               reg [7:0] tx_reg;
    24                                               reg start_out;
    25                                               
    26                                               // State memory
    27              1                       3888     always @(posedge clk ) begin
    28                                                   if(!rst_n)  
    29              1                        526            cs <= IDLE;
    30                                                   else 
    31              1                       3362             cs <= ns;
    32                                               end
    33                                               
    34                                               // Next state logic
    35              1                       7822     always @(*) begin 
    36                                                   case (cs)
    37              1                       1732             IDLE: ns = (SS_n == 0) ? CHK_CMD : IDLE;
    38                                                       
    39                                                       CHK_CMD: begin
    40                                                           if (SS_n == 1) 
    41              1                         45                     ns = IDLE;
    42                                                           else if (MOSI == 0)
    43              1                        862                     ns = WRITE;
    44                                                           else
    45              1                        392                     ns = (add_exist) ? READ_DATA : READ_ADD;
    46                                                       end
    47                                               
    48              1                       2333             WRITE: ns = (SS_n == 1) ? IDLE : WRITE;
    49              1                       1961             READ_ADD: ns = (SS_n == 1) ? IDLE : READ_ADD;
    50              1                        496             READ_DATA: ns = (SS_n == 1) ? IDLE : READ_DATA;
    51              1                          1             default: ns = IDLE;
    52                                                   endcase 
    53                                               end 
    54                                               
    55                                               // Output logic and counters
    56              1                       9610     always @(posedge clk ) begin 
    57                                                   if (!rst_n) begin
    58              1                        526             add_exist <= 0;
    59              1                        526             counter_in <= 4'b0;
    60              1                        526             counter_out <= 3'b0;
    61              1                        526             rx_valid <= 0;
    62              1                        526             rx_data <= 10'b0;
    63              1                        526             MISO <= 0;
    64                                                      
    65              1                        526             start_out <= 0;
    66              1                        526             tx_reg <= 8'b0;
    67                                                   end
    68                                                   else begin
    69                                                       // Default assignments
    70              1                       9084             rx_valid <= 0;   // to set rx_valid to zero every clk cycle even it was high previous to sample data correctly and dosnt coreept with another mosi
    71                                                      
    72                                                       
    73                                                       if (SS_n) begin
    74              1                        914                 counter_in <= 4'b0;
    75              1                        914                 counter_out <= 3'b0;
    76              1                        914                 start_out <= 0;
    77              1                        914                 rx_data <= 10'b0;
    78                                                       end
    79                                                       else begin
    80                                                               
    81                                                           case (cs)
    82                                                               IDLE: begin
    83              1                        862                         counter_in <= 0;
    84              1                        862                         counter_out <= 0;
    85                                                               end
    86                                                               
    87                                                               
    88                                                               WRITE :begin 
    89                                                                if (counter_in < 10) begin
    90              1                       3260                        rx_data <= {rx_data[8:0], MOSI};
    91              1                       3260                       counter_in <= counter_in + 1;
    92                                                                   end
    93                                                                       
    94                                                                if (counter_in == 9)
    95              1                        263                                 rx_valid <= 1;
    96                                                               end
    97                                                               READ_ADD: begin
    98                                                                  if (counter_in < 10) begin // excute 10 time 
    99              1                       2360                        rx_data <= {rx_data[8:0], MOSI};
    100             1                       2360                       counter_in <= counter_in + 1;
    101                                                                  end
    102                                                                      
    103                                                               if (counter_in == 9)   // at 10th time 
    104             1                        185                                 rx_valid <= 1;
    105             1                       2503                      add_exist <= 1 ;
    106                                                                  
    107                                                              end
    108                                                               READ_DATA : begin
    109                                                               if (counter_in < 10) begin
    110             1                        579                        rx_data <= {rx_data[8:0], MOSI};
    111             1                        579                       counter_in <= counter_in + 1;
    112                                                                  end
    113                                                                      
    114                                                               if (counter_in == 9)
    115             1                         44                                 rx_valid <= 1;
    116             1                        728                      add_exist = 0 ;
    117                                                                    
    118                                                               if ( tx_valid  ) begin
    119             1                         21                             tx_reg <= tx_data;    // save inside spi 
    120             1                         21                             start_out <= 1;
    121                                                                  end
    122                                                               end
    123                                                              
    124                                                          endcase
    125                                                          
    126                                                          
    127                                                          // MISO handling
    128                                                          if (start_out && (counter_out < 8)) begin
    129             1                        128                     MISO <= tx_reg[7-counter_out];
    130             1                        128                     counter_out <= counter_out + 1;
    131                                                          end
    132                                                          else if (counter_out >= 8 ) begin
    133             1                    ***0***                     start_out <= 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        102       102         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/GM --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                         add_exist           1           1      100.00 
                                               clk           1           1      100.00 
                                   counter_in[3-0]           1           1      100.00 
                                  counter_out[2-0]           1           1      100.00 
                                           cs[2-0]           1           1      100.00 
                                       cs_sva[0-2]           1           1      100.00 
                                           ns[2-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                      rx_data[9-0]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                         start_out           1           1      100.00 
                                      tx_data[0-7]           1           1      100.00 
                                       tx_reg[7-0]           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         51 
Toggled Node Count   =         51 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (102 of 102 bins)

=================================================================================
=== Instance: /top/DUT/SVA
=== Design Unit: work.SPI_Slave_SVA
=================================================================================

Assertion Coverage:
    Assertions                      15        15         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/SVA/AP1_reset_outputs_low_assert
                     SPI_Slave_SVA.sv(22)               0          1
/top/DUT/SVA/AP2_idle_to_chk_cmd_assert
                     SPI_Slave_SVA.sv(37)               0          1
/top/DUT/SVA/AP3_chk_cmd_valid_next_assert
                     SPI_Slave_SVA.sv(48)               0          1
/top/DUT/SVA/AP4_write_state_behavior_assert
                     SPI_Slave_SVA.sv(59)               0          1
/top/DUT/SVA/AP5_read_add_state_behavior_assert
                     SPI_Slave_SVA.sv(70)               0          1
/top/DUT/SVA/AP6_read_data_state_behavior_assert
                     SPI_Slave_SVA.sv(81)               0          1
/top/DUT/SVA/AP7_cmd_to_idle_on_ss_n_assert
                     SPI_Slave_SVA.sv(92)               0          1
/top/DUT/SVA/AP8_idle_rx_valid_low_assert
                     SPI_Slave_SVA.sv(111)              0          1
/top/DUT/SVA/AP9_rx_valid_single_cycle_assert
                     SPI_Slave_SVA.sv(122)              0          1
/top/DUT/SVA/AP10_rx_data_stable_when_idle_assert
                     SPI_Slave_SVA.sv(133)              0          1
/top/DUT/SVA/AP11_miso_tx_valid_assert
                     SPI_Slave_SVA.sv(154)              0          1
/top/DUT/SVA/AP12_rx_valid_only_when_active_assert
                     SPI_Slave_SVA.sv(169)              0          1
/top/DUT/SVA/AP13_rx_valid_low_on_idle_transition_assert
                     SPI_Slave_SVA.sv(180)              0          1
/top/DUT/SVA/AP14_fsm_valid_states_only_assert
                     SPI_Slave_SVA.sv(196)              0          1
/top/DUT/SVA/AP15_reset_forces_idle_assert
                     SPI_Slave_SVA.sv(207)              0          1

Directive Coverage:
    Directives                      15        15         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/SVA/CP1_reset_outputs_low_cover SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(27)
                                                                               528 Covered   
/top/DUT/SVA/CP2_idle_to_chk_cmd_cover   SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(42)
                                                                               817 Covered   
/top/DUT/SVA/CP3_chk_cmd_valid_next_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(53)
                                                                               769 Covered   
/top/DUT/SVA/CP4_write_state_behavior_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(64)
                                                                              3510 Covered   
/top/DUT/SVA/CP5_read_add_state_behavior_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(75)
                                                                              3023 Covered   
/top/DUT/SVA/CP6_read_data_state_behavior_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(86)
                                                                               760 Covered   
/top/DUT/SVA/CP7_cmd_to_idle_on_ss_n_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(97)
                                                                               388 Covered   
/top/DUT/SVA/CP8_idle_rx_valid_low_cover SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(116)
                                                                              1363 Covered   
/top/DUT/SVA/CP9_rx_valid_single_cycle_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(127)
                                                                               459 Covered   
/top/DUT/SVA/CP10_rx_data_stable_when_idle_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(138)
                                                                               469 Covered   
/top/DUT/SVA/CP11_miso_tx_valid_cover    SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(159)
                                                                                21 Covered   
/top/DUT/SVA/CP12_rx_valid_only_when_active_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(174)
                                                                               459 Covered   
/top/DUT/SVA/CP13_rx_valid_low_on_idle_transition_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(185)
                                                                               767 Covered   
/top/DUT/SVA/CP14_fsm_valid_states_only_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(201)
                                                                              9473 Covered   
/top/DUT/SVA/CP15_reset_forces_idle_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(212)
                                                                               528 Covered   
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         60        56         4    93.33%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/SVA --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                               clk           1           1      100.00 
                                       cs_sva[0-2]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                      rx_data[0-9]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                      tx_data[0-7]           1           1      100.00 
                                      tx_data[8-9]           0           0        0.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         30 
Toggled Node Count   =         28 
Untoggled Node Count =          2 

Toggle Coverage      =      93.33% (56 of 60 bins)

=================================================================================
=== Instance: /top/DUT
=== Design Unit: work.SLAVE
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        46        45         1    97.82%

================================Branch Details================================

Branch Coverage for instance /top/DUT

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave.v
------------------------------------IF Branch------------------------------------
    33                                      3888     Count coming in to IF
    33              1                        526         if (~rst_n) begin
    36              1                       3362         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    43                                      7713     Count coming in to CASE
    44              1                       1732             IDLE : begin
    50              1                       1299             CHK_CMD : begin
    64              1                       2333             WRITE : begin
    70              1                       1852             READ_ADD : begin
    76              1                        496             READ_DATA : begin
    82              1                          1             default : ns = IDLE;
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    45                                      1732     Count coming in to IF
    45              1                        869                 if (SS_n)
    47              1                        863                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    51                                      1299     Count coming in to IF
    51              1                         45                 if (SS_n)
    53              1                       1254                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    54                                      1254     Count coming in to IF
    54              1                        862                     if (~MOSI)
    56              1                        392                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    57                                       392     Count coming in to IF
    57              1                         81                         if (add_exist) 
    59              1                        311                         else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                      2333     Count coming in to IF
    65              1                        424                 if (SS_n)
    67              1                       1909                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    71                                      1852     Count coming in to IF
    71              1                        311                 if (SS_n)
    73              1                       1541                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    77                                       496     Count coming in to IF
    77              1                         81                 if (SS_n)
    79              1                        415                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    88                                      9610     Count coming in to IF
    88              1                        526         if (~rst_n) begin 
    100             1                       9084         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    111                                     9084     Count coming in to IF
    111             1                        914             if (SS_n) begin
    117             1                       8170             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    118                                     8170     Count coming in to CASE
    119             1                        862                     IDLE : begin
    126             1                        817                     CHK_CMD : begin
    133             1                       3260                     WRITE : begin
    152             1                       2503                     READ_ADD : begin
    167             1                        728                     READ_DATA : begin
                                         ***0***     All False Count
Branch totals: 5 hits of 6 branches = 83.33%

------------------------------------IF Branch------------------------------------
    147                                     3260     Count coming in to IF
    147             1                        263                         if (counter_in == 9) begin
                                            2997     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    155                                     2503     Count coming in to IF
    155             1                       2360                         if (counter_in < 10) begin
                                             143     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    161                                     2503     Count coming in to IF
    161             1                        185                         if (counter_in == 9) begin
                                            2318     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    169                                      728     Count coming in to IF
    169             1                        579                         if (counter_in < 10) begin
                                             149     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    175                                      728     Count coming in to IF
    175             1                         44                         if (counter_in == 9) begin
                                             684     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    191                                      728     Count coming in to IF
    191             1                         21                         if (tx_valid) begin
                                             707     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    205                                     8170     Count coming in to IF
    205             1                        128                 if (start_out && (counter_out < 8)) begin
                                            8042     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       9         6         3    66.66%

================================Condition Details================================

Condition Coverage for instance /top/DUT --

  File SPI_Slave.v
----------------Focused Condition View-------------------
Line       139 Item    1  (counter_in < 10)
Condition totals: 0 of 1 input term covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_in < 10)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (counter_in < 10)_0   -                             
  Row   2:          1  (counter_in < 10)_1   -                             

----------------Focused Condition View-------------------
Line       147 Item    1  (counter_in == 9)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_in == 9)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_in == 9)_0   -                             
  Row   2:          1  (counter_in == 9)_1   -                             

----------------Focused Condition View-------------------
Line       155 Item    1  (counter_in < 10)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_in < 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_in < 10)_0   -                             
  Row   2:          1  (counter_in < 10)_1   -                             

----------------Focused Condition View-------------------
Line       161 Item    1  (counter_in == 9)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_in == 9)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_in == 9)_0   -                             
  Row   2:          1  (counter_in == 9)_1   -                             

----------------Focused Condition View-------------------
Line       169 Item    1  (counter_in < 10)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_in < 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_in < 10)_0   -                             
  Row   2:          1  (counter_in < 10)_1   -                             

----------------Focused Condition View-------------------
Line       175 Item    1  (counter_in == 9)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_in == 9)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_in == 9)_0   -                             
  Row   2:          1  (counter_in == 9)_1   -                             

----------------Focused Condition View-------------------
Line       205 Item    1  (start_out && (counter_out < 8))
Condition totals: 1 of 2 input terms covered = 50.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
          start_out         Y
  (counter_out < 8)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  start_out_0           -                             
  Row   2:          1  start_out_1           (counter_out < 8)             
  Row   3:    ***0***  (counter_out < 8)_0   start_out                     
  Row   4:          1  (counter_out < 8)_1   start_out                     

----------------Focused Condition View-------------------
Line       210 Item    1  (counter_out >= 8)
Condition totals: 0 of 1 input term covered = 0.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (counter_out >= 8)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_out >= 8)_0  -                             
  Row   2:    ***0***  (counter_out >= 8)_1  -                             


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top/DUT --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  44                IDLE                   0
  50             CHK_CMD                   2
  70            READ_ADD                   3
  76           READ_DATA                   4
  64               WRITE                   1
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                1440          
                 CHK_CMD                 862          
                READ_ADD                 605          
               READ_DATA                 158          
                   WRITE                 823          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  48                   0                 862          IDLE -> CHK_CMD               
  60                   1                 311          CHK_CMD -> READ_ADD           
  58                   2                  81          CHK_CMD -> READ_DATA          
  55                   3                 425          CHK_CMD -> WRITE              
  52                   4                  45          CHK_CMD -> IDLE               
  72                   5                 311          READ_ADD -> IDLE              
  78                   6                  81          READ_DATA -> IDLE             
  66                   7                 424          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      49        49         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave.v
    1                                                module SLAVE (MOSI, MISO, SS_n, clk, rst_n, rx_data, rx_valid, tx_data, tx_valid,cs_sva);
    2                                                
    3                                                localparam IDLE      = 3'b000;
    4                                                localparam WRITE     = 3'b001;
    5                                                localparam CHK_CMD   = 3'b010;
    6                                                localparam READ_ADD  = 3'b011;
    7                                                localparam READ_DATA = 3'b100;
    8                                                
    9                                                input            MOSI, clk, rst_n, SS_n, tx_valid;
    10                                               input      [7:0] tx_data;
    11                                               output reg [9:0] rx_data;
    12                                               output reg       rx_valid, MISO;
    13                                               output wire [2:0] cs_sva;
    14                                               // BUG FIX #3: Split single counter into two separate counters
    15                                               // ORIGINAL BUG: Used single 'counter' for both RX and TX, causing conflicts
    16                                               // FIX: Use counter_in for receiving data and counter_out for transmitting
    17                                               reg [3:0] counter_in;      // Counter for input (receiving 10 bits)
    18                                               reg [2:0] counter_out;     // Counter for output (transmitting 8 bits)
    19                                               
    20                                               // Renamed 'received_address' to 'add_exist' for clarity (same functionality)
    21                                               reg       add_exist;       // Flag to track if address has been received
    22                                               
    23                                               // BUG FIX #4: Added registers to properly handle MISO transmission
    24                                               // ORIGINAL BUG: Directly used tx_data without latching, causing timing issues
    25                                               // FIX: Latch tx_data into tx_reg and use start_out flag to control transmission
    26                                               reg [7:0] tx_reg;          // Register to latch and hold tx_data during transmission
    27                                               reg       start_out;       // Flag to indicate MISO transmission is active
    28                                               
    29                                               reg [2:0] cs, ns;
    30                                               
    31                                               // State memory - No changes needed
    32              1                       3888     always @(posedge clk) begin
    33                                                   if (~rst_n) begin
    34              1                        526             cs <= IDLE;
    35                                                   end
    36                                                   else begin
    37              1                       3362             cs <= ns;
    38                                                   end
    39                                               end
    40                                               
    41                                               // Next state logic - No changes needed
    42              1                       7713     always @(*) begin
    43                                                   case (cs)
    44                                                       IDLE : begin
    45                                                           if (SS_n)
    46              1                        869                     ns = IDLE;
    47                                                           else
    48              1                        863                     ns = CHK_CMD;
    49                                                       end
    50                                                       CHK_CMD : begin
    51                                                           if (SS_n)
    52              1                         45                     ns = IDLE;
    53                                                           else begin
    54                                                               if (~MOSI)
    55              1                        862                         ns = WRITE;
    56                                                               else begin
    57                                                                   if (add_exist) 
    58              1                         81                             ns = READ_DATA; 
    59                                                                   else
    60              1                        311                             ns = READ_ADD;
    61                                                               end
    62                                                           end
    63                                                       end
    64                                                       WRITE : begin
    65                                                           if (SS_n)
    66              1                        424                     ns = IDLE;
    67                                                           else
    68              1                       1909                     ns = WRITE;
    69                                                       end
    70                                                       READ_ADD : begin
    71                                                           if (SS_n)
    72              1                        311                     ns = IDLE;
    73                                                           else
    74              1                       1541                     ns = READ_ADD;
    75                                                       end
    76                                                       READ_DATA : begin
    77                                                           if (SS_n)
    78              1                         81                     ns = IDLE;
    79                                                           else
    80              1                        415                     ns = READ_DATA;
    81                                                       end
    82              1                          1             default : ns = IDLE;
    83                                                   endcase
    84                                               end
    85                                               
    86                                               // Output logic
    87              1                       9610     always @(posedge clk) begin
    88                                                   if (~rst_n) begin 
    89              1                        526             rx_data <= 0;
    90              1                        526             rx_valid <= 0;
    91              1                        526             add_exist <= 0;
    92              1                        526             MISO <= 0;
    93                                                       
    94                                                       // BUG FIX #2: Initialize new registers during reset
    95              1                        526             counter_in <= 0;
    96              1                        526             counter_out <= 0;
    97              1                        526             tx_reg <= 0;
    98              1                        526             start_out <= 0;
    99                                                   end
    100                                                  else begin
    101                                                      // BUG FIX #6: Clear rx_valid every cycle by default
    102                                                      // ORIGINAL BUG: rx_valid was only cleared in IDLE state
    103                                                      // FIX: Set rx_valid <= 0 at the start, then set to 1 only when data is ready
    104                                                      // This ensures proper handshaking - rx_valid pulses high for one cycle
    105             1                       9084             rx_valid <= 0;
    106                                                      
    107                                                      // BUG FIX #7: Handle SS_n deassertion to reset counters and data
    108                                                      // ORIGINAL BUG: No handling when slave is deselected (SS_n goes high)
    109                                                      // FIX: Reset all counters and data registers when SS_n is high
    110                                                      // This ensures clean state for next transaction
    111                                                      if (SS_n) begin
    112             1                        914                 counter_in <= 4'b0;
    113             1                        914                 counter_out <= 3'b0;
    114             1                        914                 start_out <= 0;
    115             1                        914                 rx_data <= 10'b0;
    116                                                      end
    117                                                      else begin
    118                                                          case (cs)
    119                                                              IDLE : begin
    120                                                                  // BUG FIX #2: Reset counters in IDLE state
    121                                                                  // ORIGINAL BUG: Counters were never reset, causing incorrect counts
    122             1                        862                         counter_in <= 0;
    123             1                        862                         counter_out <= 0;
    124                                                              end
    125                                                              
    126                                                              CHK_CMD : begin
    127                                                                  // BUG FIX #1: Initialize counter_in to 0 instead of 10
    128                                                                  // ORIGINAL BUG: counter initialized to 10 and decremented
    129                                                                  // FIX: Start from 0 and increment - more intuitive and efficient
    130             1                        817                         counter_in <= 0;      
    131                                                              end
    132                                                              
    133                                                              WRITE : begin
    134                                                                  // BUG FIX #1: Use increment counter with shift register
    135                                                                  // ORIGINAL BUG: Used decrement counter with direct indexing rx_data[counter-1]
    136                                                                  //               This caused 11 cycles to complete (counter: 10->9->...->0)
    137                                                                  // FIX: Increment from 0 to 9 (10 cycles) and use shift register
    138                                                                  //      Shift register: {rx_data[8:0], MOSI} shifts left and adds new bit at LSB
    139                                                                  if (counter_in < 10) begin
    140             1                       3260                             rx_data <= {rx_data[8:0], MOSI};  // Shift left, add MOSI at bit[0]
    141             1                       3260                             counter_in <= counter_in + 1;
    142                                                                  end
    143                                                                  
    144                                                                  // BUG FIX #6: Set rx_valid on same cycle as last bit received
    145                                                                  // ORIGINAL BUG: rx_valid set one cycle late (when counter = 0)
    146                                                                  // FIX: Check if counter_in == 9, meaning we just received 10th bit
    147                                                                  if (counter_in == 9) begin
    148             1                        263                             rx_valid <= 1;
    149                                                                  end
    150                                                              end
    151                                                              
    152                                                              READ_ADD : begin
    153                                                                  // Same fixes as WRITE state
    154                                                                  // BUG FIX #1: Shift register approach instead of direct indexing
    155                                                                  if (counter_in < 10) begin
    156             1                       2360                             rx_data <= {rx_data[8:0], MOSI};
    157             1                       2360                             counter_in <= counter_in + 1;
    158                                                                  end
    159                                                                  
    160                                                                  // BUG FIX #6: Immediate rx_valid on 10th bit
    161                                                                  if (counter_in == 9) begin
    162             1                        185                             rx_valid <= 1;
    163             1                        185                             add_exist <= 1;  // Mark that address has been received
    164                                                                  end
    165                                                              end
    166                                                              
    167                                                              READ_DATA : begin
    168                                                                  // BUG FIX #1: Same shift register approach for receiving
    169                                                                  if (counter_in < 10) begin
    170             1                        579                             rx_data <= {rx_data[8:0], MOSI};
    171             1                        579                             counter_in <= counter_in + 1;
    172                                                                  end
    173                                                                  
    174                                                                  // BUG FIX #6: Immediate rx_valid
    175                                                                  if (counter_in == 9) begin
    176             1                         44                             rx_valid <= 1;
    177                                                                  end
    178                                                                  
    179                                                                  // BUG FIX #5: Use blocking assignment for add_exist flag
    180                                                                  // ORIGINAL BUG: Used non-blocking (<=) which delays update by one cycle
    181                                                                  // FIX: Use blocking (=) for immediate effect within same cycle
    182                                                                  // This ensures add_exist is cleared immediately for next transaction
    183             1                        728                         add_exist = 0;
    184                                                                  
    185                                                                  // BUG FIX #4: Latch tx_data when valid, don't use directly
    186                                                                  // ORIGINAL BUG: Used tx_data[counter-1] directly with same counter as RX
    187                                                                  //               Counter management was chaotic (set to 8 mid-operation)
    188                                                                  // FIX: When tx_valid is high:
    189                                                                  //      1. Latch tx_data into tx_reg for stable transmission
    190                                                                  //      2. Set start_out flag to begin MISO transmission
    191                                                                  if (tx_valid) begin
    192             1                         21                             tx_reg <= tx_data;    // Save data to transmit
    193             1                         21                             start_out <= 1;       // Signal to start MISO output
    194                                                                  end
    195                                                              end
    196                                                          endcase
    197                                                          
    198                                                          // BUG FIX #4: Separate, independent MISO transmission logic
    199                                                          // ORIGINAL BUG: MISO logic was inside READ_DATA state with shared counter
    200                                                          //               Used: if(counter > 0) MISO <= tx_data[counter-1]
    201                                                          //               Then set counter <= 8, causing conflicts with RX operations
    202                                                          // FIX: Place MISO logic outside case statement so it runs independently
    203                                                          //      Use dedicated counter_out for transmission (0 to 7 for 8 bits)
    204                                                          //      This allows simultaneous RX (via MOSI) and TX (via MISO)
    205                                                          if (start_out && (counter_out < 8)) begin
    206                                                              // Transmit MSB first: tx_reg[7], tx_reg[6], ..., tx_reg[0]
    207             1                        128                     MISO <= tx_reg[7 - counter_out];
    208             1                        128                     counter_out <= counter_out + 1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        102       102         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                              MISO           1           1      100.00 
                                              MOSI           1           1      100.00 
                                              SS_n           1           1      100.00 
                                         add_exist           1           1      100.00 
                                               clk           1           1      100.00 
                                   counter_in[3-0]           1           1      100.00 
                                  counter_out[2-0]           1           1      100.00 
                                           cs[2-0]           1           1      100.00 
                                       cs_sva[0-2]           1           1      100.00 
                                           ns[2-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                      rx_data[9-0]           1           1      100.00 
                                          rx_valid           1           1      100.00 
                                         start_out           1           1      100.00 
                                      tx_data[0-7]           1           1      100.00 
                                       tx_reg[7-0]           1           1      100.00 
                                          tx_valid           1           1      100.00 

Total Node Count     =         51 
Toggled Node Count   =         51 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (102 of 102 bins)

=================================================================================
=== Instance: /top
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       7         7         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File top.sv
    5                                                module top();
    6                                                 bit clk;
    7                                                  // Clock generation
    8                                                  initial begin
    9               1                          1       clk=0;
    10              1                          1       forever 
    11              1                      20003       #5 clk = ~clk;
    11              2                      20002     
    12                                               end
    13                                                 // Instantiate the interface and DUT
    14                                                 SPI_Slave_if SPI_Slave_if (clk);
    15                                                 SPI_gm_if SPI_gm_if (clk);
    16                                                 SLAVE_GM GM (
    17                                                   .clk(SPI_Slave_if.clk),
    18                                                   .rst_n(SPI_Slave_if.rst_n),
    19                                                   .MOSI(SPI_Slave_if.MOSI),
    20                                                   .SS_n(SPI_Slave_if.SS_n),
    21                                                   .tx_valid(SPI_Slave_if.tx_valid),
    22                                                   .tx_data(SPI_Slave_if.tx_data),
    23                                               
    24                                                   .rx_data(SPI_gm_if.rx_data_gm),
    25                                                   .rx_valid(SPI_gm_if.rx_valid_gm),
    26                                                   .MISO(SPI_gm_if.MISO_gm),
    27                                                   .cs_sva(SPI_gm_if.cs_sva_gm)
    28                                                 );
    29                                               
    30                                                 SLAVE DUT (
    31                                                   .clk(SPI_Slave_if.clk),
    32                                                   .rst_n(SPI_Slave_if.rst_n),
    33                                                   .MOSI(SPI_Slave_if.MOSI),
    34                                                   .SS_n(SPI_Slave_if.SS_n),
    35                                                   .tx_valid(SPI_Slave_if.tx_valid),
    36                                                   .tx_data(SPI_Slave_if.tx_data),
    37                                                   .rx_data(SPI_Slave_if.rx_data),
    38                                                   .rx_valid(SPI_Slave_if.rx_valid),
    39                                                   .MISO(SPI_Slave_if.MISO),
    40                                                   .cs_sva(SPI_Slave_if.cs_sva)
    41                                                 );
    42                                               
    43                                               
    44                                                 bind SLAVE SPI_Slave_SVA SVA (    
    45                                                   .clk(SPI_Slave_if.clk),
    46                                                   .rst_n(SPI_Slave_if.rst_n),
    47                                                   .MOSI(SPI_Slave_if.MOSI),
    48                                                   .SS_n(SPI_Slave_if.SS_n),
    49                                                   .tx_valid(SPI_Slave_if.tx_valid),
    50                                                   .tx_data(SPI_Slave_if.tx_data),
    51                                                   .rx_data(SPI_Slave_if.rx_data),
    52                                                   .rx_valid(SPI_Slave_if.rx_valid),
    53                                                   .MISO(SPI_Slave_if.MISO),
    54                                                   .cs_sva(SPI_Slave_if.cs_sva) // connect the DUT state signal to the SVA
    55                                                   );
    56                                                 // run test using run_test task
    57                                                 initial begin
    58              1                          1       uvm_config_db#(virtual SPI_Slave_if)::set(null , "uvm_test_top" , "SPI_Slave_IF" , SPI_Slave_if);
    59              1                          1       uvm_config_db#(virtual SPI_gm_if)::set(null , "uvm_test_top" , "SPI_gm_IF" , SPI_gm_if);
    60              1                          1       run_test("SPI_Slave_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /SPI_Slave_seq_item_pkg
=== Design Unit: work.SPI_Slave_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20        12         8    60.00%

================================Branch Details================================

Branch Coverage for instance /SPI_Slave_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_seq_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***         `uvm_object_utils(SPI_Slave_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                      10001     Count coming in to IF
    7               2                    ***0***         `uvm_object_utils(SPI_Slave_seq_item)
                                           10001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***         `uvm_object_utils(SPI_Slave_seq_item)
    7               4                    ***0***         `uvm_object_utils(SPI_Slave_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                      10001     Count coming in to IF
    7               5                    ***0***         `uvm_object_utils(SPI_Slave_seq_item)
                                           10001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***         `uvm_object_utils(SPI_Slave_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    84                                     10000     Count coming in to IF
    84              1                        527           if (!rst_n) begin
                                            9473     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    98                                      9473     Count coming in to IF
    98              1                        914           if (frame_counter == 0) begin
    105             1                       8559            else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    101                                      914     Count coming in to IF
    101             1                        214                frame_period         = (mosi_bits [10:8] == 3'b111) ? 23 : 13;
    101             2                        700                frame_period         = (mosi_bits [10:8] == 3'b111) ? 23 : 13;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    110                                     9473     Count coming in to IF
    110             1                       7016             if ( (13 > frame_counter)  && (frame_counter > 1) ) begin   // first transient to chk_cmd not get values from mosi_bits
    113             1                       2457             end else begin 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    120                                     9473     Count coming in to IF
    120             1                         96           if (current_mosi_bits[10:8] == 3'b111 && SS_n == 0 && frame_counter == 13) begin 
    124             1                       9377               else  begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       9         7         2    77.77%

================================Condition Details================================

Condition Coverage for instance /SPI_Slave_seq_item_pkg --

  File SPI_Slave_seq_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       98 Item    1  (frame_counter == 0)
Condition totals: 1 of 1 input term covered = 100.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (frame_counter == 0)         Y

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (frame_counter == 0)_0  -                             
  Row   2:          1  (frame_counter == 0)_1  -                             

----------------Focused Condition View-------------------
Line       101 Item    1  (this.mosi_bits[10:8] == 7)
Condition totals: 1 of 1 input term covered = 100.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (this.mosi_bits[10:8] == 7)         Y

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:          1  (this.mosi_bits[10:8] == 7)_0  -                             
  Row   2:          1  (this.mosi_bits[10:8] == 7)_1  -                             

----------------Focused Condition View-------------------
Line       110 Item    1  ((13 > frame_counter) && (frame_counter > 1))
Condition totals: 2 of 2 input terms covered = 100.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (13 > frame_counter)         Y
   (frame_counter > 1)         Y

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (13 > frame_counter)_0  -                             
  Row   2:          1  (13 > frame_counter)_1  (frame_counter > 1)           
  Row   3:          1  (frame_counter > 1)_0   (13 > frame_counter)          
  Row   4:          1  (frame_counter > 1)_1   (13 > frame_counter)          

----------------Focused Condition View-------------------
Line       120 Item    1  ((current_mosi_bits[10:8] == 7) && ~this.SS_n && (frame_counter == 13))
Condition totals: 3 of 3 input terms covered = 100.00%

                      Input Term   Covered  Reason for no coverage   Hint
                     -----------  --------  -----------------------  --------------
  (current_mosi_bits[10:8] == 7)         Y
                       this.SS_n         Y
           (frame_counter == 13)         Y

     Rows:       Hits  FEC Target                        Non-masking condition(s)      
 ---------  ---------  --------------------              -------------------------     
  Row   1:          1  (current_mosi_bits[10:8] == 7)_0  -                             
  Row   2:          1  (current_mosi_bits[10:8] == 7)_1  (~this.SS_n && (frame_counter == 13))
  Row   3:          1  this.SS_n_0                       ((current_mosi_bits[10:8] == 7) && (frame_counter == 13))
  Row   4:          1  this.SS_n_1                       (current_mosi_bits[10:8] == 7)
  Row   5:          1  (frame_counter == 13)_0           ((current_mosi_bits[10:8] == 7) && ~this.SS_n)
  Row   6:          1  (frame_counter == 13)_1           ((current_mosi_bits[10:8] == 7) && ~this.SS_n)


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      37        27        10    72.97%

================================Statement Details================================

Statement Coverage for instance /SPI_Slave_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_seq_item.sv
    1                                                package SPI_Slave_seq_item_pkg;
    2                                                  import uvm_pkg::*;
    3                                                  import shared_pkg::*;
    4                                                  `include "uvm_macros.svh"
    5                                                
    6                                                  class SPI_Slave_seq_item extends uvm_sequence_item;
    7               1                    ***0***         `uvm_object_utils(SPI_Slave_seq_item)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                      10001     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                      10001     
    7              10                    ***0***     
    8                                                
    9                                                    // ============================================
    10                                                   // GM signals
    11                                                   // ============================================
    12                                                    logic [9:0] rx_data_gm;
    13                                                    logic rx_valid_gm, MISO_gm;
    14                                                    logic [2:0] cs_sva_gm;
    15                                               
    16                                               
    17                                               
    18                                               
    19                                                   // ============================================
    20                                                   // DUT signals
    21                                                   // ============================================
    22              1                      30005         logic MOSI = 0;
    23                                                   rand logic       rst_n;
    24                                                   rand logic   SS_n, tx_valid;
    25                                                   logic [7:0] tx_data;
    26                                                   
    27                                               
    28                                                   // DUT outputs (for monitor use)
    29                                                   logic [9:0] rx_data;
    30                                                   logic       rx_valid;
    31                                                   logic       MISO;
    32                                                   logic [2:0] cs_sva;
    33                                               
    34                                                   // ============================================
    35                                                   // Internal randomization control
    36                                                   // ============================================
    37                                                   rand logic [10:0] mosi_bits;  // full serial frame (11 bits)
    38                                               
    39                                                   // Global (shared) variables for frame control
    40                                                   
    41                                                   static int bit_counter = 0;
    42                                                   static logic [10:0] current_mosi_bits; // current active command frame
    43                                                   static int frame_counter = 0;
    44                                                   static int frame_period  = 13;
    45                                               
    46                                                   // ============================================
    47                                                   // Constructor
    48                                                   // ============================================
    49                                                   function new(string name = "SPI_Slave_seq_item");
    50              1                      30005           super.new(name);
    51                                                   endfunction
    52                                               
    53                                                   // ============================================
    54                                                   // Constraints
    55                                                   // ============================================
    56                                               
    57                                                   // (1) Reset mostly deasserted
    58                                                   constraint rst_n_c {
    59                                                     rst_n dist {1 := 95, 0 := 5};
    60                                                   }
    61                                               
    62                                                   // (2) Valid MOSI command combinations (first 3 bits)
    63                                                   // Commands: 000=WRITE_ADD, 001=reserved, 110=READ_ADD, 111=READ_DATA
    64                                                   constraint valid_cmd_c {
    65                                                     !(mosi_bits[10:8] inside {3'b100 ,3'b010 ,3'b011 ,3'b101 }) ;
    66                                                     mosi_bits[10:8] inside {3'b000, 3'b001, 3'b110, 3'b111};
    67                                                   }
    68                                               
    69                                                   
    70                                               
    71                                                   // (4) tx_valid high only during READ_DATA operations
    72                                                   constraint tx_valid_c {
    73                                                     if (mosi_bits[10:8] == 3'b111)
    74                                                       tx_valid == 1;
    75                                                     else
    76                                                       tx_valid == 0;
    77                                                   }
    78                                               
    79                                                   // ============================================
    80                                                   // post_randomize() : handle SS_n + MOSI timing
    81                                                   // ============================================
    82                                                   function void post_randomize();
    83                                               
    84                                                     if (!rst_n) begin
    85                                                       // During reset, force outputs low and idle inputs
    86              1                        527             MOSI     = 0;
    87              1                        527             SS_n     = 1;  // inactive
    88              1                        527             tx_valid = 0;
    89              1                        527             tx_data  = 0;
    90              1                        527             bit_counter = 0;
    91              1                        527             frame_counter = 0;
    92              1                        527             current_mosi_bits = 0;
    93              1                        527             frame_period = 13;
    94              1                        527             return;
    95                                                     end
    96                                               
    97                                                     // Latch new frame properties only at frame start
    98                                                     if (frame_counter == 0) begin
    99                                                      // Latch frame properties only once per frame
    100             1                        914                current_mosi_bits    = mosi_bits;
    101             1                        914                frame_period         = (mosi_bits [10:8] == 3'b111) ? 23 : 13;
    102             1                        914                bit_counter = 0;
    103             1                        914                SS_n = 1;   // high for 1 cycle at start of new frame
    104                                                       end
    105                                                     else begin
    106                                                    
    107             1                       8559             SS_n = 0;   
    108                                                      end
    109                                              
    110                                                      if ( (13 > frame_counter)  && (frame_counter > 1) ) begin   // first transient to chk_cmd not get values from mosi_bits
    111             1                       7016                  MOSI = current_mosi_bits[10 - bit_counter];
    112             1                       7016                  bit_counter = (bit_counter + 1) % 11; 
    113                                                      end else begin 
    114             1                       2457                MOSI = 0; // idle value
    115             1                       2457                bit_counter = 0;
    116                                                       end
    117                                              
    118                                              
    119                                                    // (4) tx_valid logic (reinforced for safety)
    120                                                    if (current_mosi_bits[10:8] == 3'b111 && SS_n == 0 && frame_counter == 13) begin 
    121             1                         96                 tx_valid = 1;    // pulse for 1 cycle at bit 13 of READ_DATA frame
    122             1                         96                 tx_data = $random; // random data to send
    123                                                        end
    124                                                        else  begin
    125             1                       9377                 tx_valid = 0;
    126             1                       9377                 tx_data  = 0;    // idle value
    127                                                        end
    128                                              
    129                                                    // --- Increment counters ---
    130             1                       9473            frame_counter = (frame_counter + 1) % frame_period; // controls SS_n timing  zero at frame counter = 12
    131                                              
    132                                                     // debug 
    133                                                     //$display("post_randomize: %s time = %0t frame_counter=%0d bit_counter=%0d current_mosi_bits=%b ",convert2string(), $time, frame_counter, bit_counter , current_mosi_bits);
    134                                                    
    135                                              
    136                                              
    137                                                  endfunction
    138                                              
    139                                              
    140                                                  function string convert2string();
    141             1                    ***0***           return $sformatf( " MSIO = %0b SS_n=%0b rst_n=%0b tx_valid=%0b tx_data=0x%0h mosi_bits=%b (cycle=%0d bit=%0d) | rx_data=0x%0h rx_valid=%0b MISO=%0b | GM: rx_data_gm=0x%0h rx_valid_gm=%0b MISO_gm=%0b | cs_sva=%0b cs_sva_gm=%0b |",
    142                                                      MOSI, SS_n, rst_n, tx_valid, tx_data, mosi_bits, frame_counter, bit_counter,
    143                                                      rx_data, rx_valid, MISO,
    144                                                      rx_data_gm, rx_valid_gm, MISO_gm, cs_sva , cs_sva_gm );
    145                                                  endfunction
    146                                              
    147                                                  function string convert2string_stimulus();
    148             1                    ***0***           return $sformatf("Stimulus: CMD=%3b MOSI=%0b SS_n=%0b tx_valid=%0b rst_n=%0b tx_data=0x%0h",


=================================================================================
=== Instance: /SPI_Slave_main_seq_pkg
=== Design Unit: work.SPI_Slave_main_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/SPI_Slave_main_seq_pkg/SPI_Slave_main_seq/body/#ublk#190343959#15/immed__18
                     SPI_Slave_main_seq.sv(18)          0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /SPI_Slave_main_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_main_seq.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***      `uvm_object_utils(SPI_Slave_main_seq);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                          1     Count coming in to IF
    7               2                    ***0***      `uvm_object_utils(SPI_Slave_main_seq);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***      `uvm_object_utils(SPI_Slave_main_seq);
    7               4                    ***0***      `uvm_object_utils(SPI_Slave_main_seq);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                          1     Count coming in to IF
    7               5                    ***0***      `uvm_object_utils(SPI_Slave_main_seq);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***      `uvm_object_utils(SPI_Slave_main_seq);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_Slave_main_seq_pkg --

  File SPI_Slave_main_seq.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         7         8    46.66%

================================Statement Details================================

Statement Coverage for instance /SPI_Slave_main_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_main_seq.sv
    1                                                package SPI_Slave_main_seq_pkg;
    2                                                import uvm_pkg::*;
    3                                                import shared_pkg::*;
    4                                                import SPI_Slave_seq_item_pkg::*;
    5                                                `include "uvm_macros.svh"
    6                                                class SPI_Slave_main_seq extends uvm_sequence #(SPI_Slave_seq_item);
    7               1                    ***0***      `uvm_object_utils(SPI_Slave_main_seq);
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                          1     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                          1     
    7              10                    ***0***     
    8                                                 SPI_Slave_seq_item seq_item;
    9                                                
    10                                                function new(string name = "SPI_Slave_main_seq");
    11              1                          1         super.new(name);  
    12                                               endfunction
    13                                               
    14                                               task body;
    15              1                      10000     repeat(10000) begin
    16              1                      10000     seq_item = SPI_Slave_seq_item::type_id::create("seq_item");
    17              1                      10000         start_item(seq_item);
    18                                                   assert(seq_item.randomize());
    19              1                      10000         finish_item(seq_item);


=================================================================================
=== Instance: /SPI_Slave_reset_seq_pkg
=== Design Unit: work.SPI_Slave_reset_seq_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /SPI_Slave_reset_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_rst_seq.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***     `uvm_object_utils (SPI_Slave_reset_seq) ;
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               2                    ***0***     `uvm_object_utils (SPI_Slave_reset_seq) ;
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***     `uvm_object_utils (SPI_Slave_reset_seq) ;
    8               4                    ***0***     `uvm_object_utils (SPI_Slave_reset_seq) ;
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                          1     Count coming in to IF
    8               5                    ***0***     `uvm_object_utils (SPI_Slave_reset_seq) ;
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***     `uvm_object_utils (SPI_Slave_reset_seq) ;
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_Slave_reset_seq_pkg --

  File SPI_Slave_rst_seq.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         7         8    46.66%

================================Statement Details================================

Statement Coverage for instance /SPI_Slave_reset_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_rst_seq.sv
    1                                                package SPI_Slave_reset_seq_pkg;
    2                                                import uvm_pkg::*;
    3                                                import shared_pkg::*;
    4                                                import SPI_Slave_seq_item_pkg::*;
    5                                                `include "uvm_macros.svh"
    6                                                class SPI_Slave_reset_seq extends uvm_sequence #(SPI_Slave_seq_item);
    7                                                
    8               1                    ***0***     `uvm_object_utils (SPI_Slave_reset_seq) ;
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                          1     
    8              10                    ***0***     
    9                                                
    10                                                   SPI_Slave_seq_item seq_item ;
    11                                               
    12                                               
    13                                                function new ( string name = "SPI_Slave_reset_sequence") ;
    14              1                          1        super.new (name) ;
    15                                                endfunction 
    16                                               
    17                                                task body; 
    18              1                          1      seq_item = SPI_Slave_seq_item::type_id::create("seq_item");
    19              1                          1      start_item(seq_item) ;
    20              1                          1      seq_item.rst_n = 0 ;
    21              1                          1      finish_item(seq_item);


=================================================================================
=== Instance: /SPI_Slave_config_pkg
=== Design Unit: work.SPI_Slave_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /SPI_Slave_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_config.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***     `uvm_object_utils(SPI_Slave_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***     `uvm_object_utils(SPI_Slave_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***     `uvm_object_utils(SPI_Slave_config);
    6               4                    ***0***     `uvm_object_utils(SPI_Slave_config);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***     `uvm_object_utils(SPI_Slave_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***     `uvm_object_utils(SPI_Slave_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_Slave_config_pkg --

  File SPI_Slave_config.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      12         2        10    16.66%

================================Statement Details================================

Statement Coverage for instance /SPI_Slave_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_config.sv
    1                                                package SPI_Slave_config_pkg;
    2                                                import uvm_pkg::*;
    3                                                import shared_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class SPI_Slave_config extends uvm_object;
    6               1                    ***0***     `uvm_object_utils(SPI_Slave_config);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                
    8                                                virtual SPI_Slave_if SPI_Slave_vif;
    9                                                virtual SPI_gm_if SPI_gm_vif; 
    10              1                          1     uvm_active_passive_enum is_active = UVM_ACTIVE;
    11                                               function new(string name = "SPI_Slave_config");
    12              1                          1       super.new(name);  


=================================================================================
=== Instance: /SPI_Slave_monitor_pkg
=== Design Unit: work.SPI_Slave_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /SPI_Slave_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_monitor.sv
------------------------------------IF Branch------------------------------------
    44                                     10001     Count coming in to IF
    44              1                    ***0***                 `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)
                                           10001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      25        22         3    88.00%

================================Statement Details================================

Statement Coverage for instance /SPI_Slave_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_monitor.sv
    1                                                package SPI_Slave_monitor_pkg;
    2                                                import uvm_pkg::*;
    3                                                import shared_pkg::*;
    4                                                import SPI_Slave_config_pkg::*;
    5                                                import SPI_Slave_seq_item_pkg::*;
    6                                                `include "uvm_macros.svh"
    7                                                class SPI_Slave_monitor extends uvm_monitor;
    8               1                    ***0***         `uvm_component_utils(SPI_Slave_monitor)
    8               2                    ***0***     
    8               3                          2     
    9                                                    
    10                                                   virtual SPI_Slave_if SPI_Slave_vif;
    11                                                   virtual SPI_gm_if SPI_gm_vif;
    12                                                   SPI_Slave_seq_item rsp_seq_item;
    13                                                   uvm_analysis_port #(SPI_Slave_seq_item) mon_ap;
    14                                               
    15                                                   function new(string name = "SPI_Slave_monitor", uvm_component parent = null);
    16              1                          1             super.new(name, parent);
    17                                                   endfunction
    18                                               
    19                                                   function void build_phase(uvm_phase phase);
    20              1                          1             super.build_phase(phase);
    21              1                          1             mon_ap = new("mon_ap", this);
    22                                                   endfunction
    23                                               
    24                                                   task run_phase(uvm_phase phase);
    25              1                          1             super.run_phase(phase);
    26              1                          1             forever begin
    27              1                      10002                 rsp_seq_item = SPI_Slave_seq_item::type_id::create("rsp_seq_item");
    28              1                      10002                 @(negedge SPI_Slave_vif.clk);
    29              1                      10001                 rsp_seq_item.MOSI = SPI_Slave_vif.MOSI;
    30              1                      10001                 rsp_seq_item.rst_n = SPI_Slave_vif.rst_n;
    31              1                      10001                 rsp_seq_item.SS_n = SPI_Slave_vif.SS_n;
    32              1                      10001                 rsp_seq_item.tx_valid = SPI_Slave_vif.tx_valid;
    33              1                      10001                 rsp_seq_item.tx_data = SPI_Slave_vif.tx_data;
    34              1                      10001                 rsp_seq_item.MISO = SPI_Slave_vif.MISO;
    35              1                      10001                 rsp_seq_item.rx_data = SPI_Slave_vif.rx_data;
    36              1                      10001                 rsp_seq_item.rx_valid = SPI_Slave_vif.rx_valid;
    37              1                      10001                 rsp_seq_item.cs_sva = SPI_Slave_vif.cs_sva;
    38                                                           // golden model captures the data
    39              1                      10001                 rsp_seq_item.rx_data_gm = SPI_gm_vif.rx_data_gm;
    40              1                      10001                 rsp_seq_item.rx_valid_gm = SPI_gm_vif.rx_valid_gm;
    41              1                      10001                 rsp_seq_item.MISO_gm = SPI_gm_vif.MISO_gm;
    42              1                      10001                 rsp_seq_item.cs_sva_gm = SPI_gm_vif.cs_sva_gm;
    43              1                      10001                 mon_ap.write(rsp_seq_item);
    44              1                    ***0***                 `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)


=================================================================================
=== Instance: /SPI_Slave_coverage_pkg
=== Design Unit: work.SPI_Slave_coverage_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        18        15         3    83.33%

================================Branch Details================================

Branch Coverage for instance /SPI_Slave_coverage_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_coverage.sv
------------------------------------IF Branch------------------------------------
    143                                    10001     Count coming in to IF
    143             1                        862             if (prev_SS_n == 1 && seq_item_cov.SS_n == 0) begin
    151             1                       7697             else if (seq_item_cov.SS_n == 0 && prev_SS_n == 0) begin
    155             1                        861             else if (prev_SS_n == 0 && seq_item_cov.SS_n == 1) begin
                                             581     All False Count
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    157                                      861     Count coming in to IF
    157             1                        396                 if (ss_n_low_count == 12) begin
    162             1                         50                 else if (ss_n_low_count == 22) begin
                                             415     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    159                                      396     Count coming in to IF
    159             1                    ***0***                     `uvm_info("COVERAGE", $sformatf("Normal transaction completed: SS_n low for %0d cycles", ss_n_low_count), UVM_HIGH)
                                             396     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    164                                       50     Count coming in to IF
    164             1                    ***0***                     `uvm_info("COVERAGE", $sformatf("Extended transaction completed: SS_n low for %0d cycles", ss_n_low_count), UVM_HIGH)
                                              50     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    174                                    10001     Count coming in to IF
    174             1                        862             if (prev_SS_n == 1 && seq_item_cov.SS_n == 0) begin
    180             1                       2329             else if (seq_item_cov.SS_n == 0 && mosi_bit_count < 3) begin
                                            6810     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    185                                     2329     Count coming in to IF
    185             1                        743                 if (mosi_bit_count == 3) begin
                                            1586     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    187                                      743     Count coming in to IF
    187             1                    ***0***                     `uvm_info("COVERAGE", $sformatf("MOSI command captured: %3b", mosi_cmd), UVM_HIGH)
                                             743     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      13        12         1    92.30%

================================Condition Details================================

Condition Coverage for instance /SPI_Slave_coverage_pkg --

  File SPI_Slave_coverage.sv
----------------Focused Condition View-------------------
Line       143 Item    1  (this.prev_SS_n && ~this.seq_item_cov.SS_n)
Condition totals: 2 of 2 input terms covered = 100.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
          this.prev_SS_n         Y
  this.seq_item_cov.SS_n         Y

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  this.prev_SS_n_0          -                             
  Row   2:          1  this.prev_SS_n_1          ~this.seq_item_cov.SS_n       
  Row   3:          1  this.seq_item_cov.SS_n_0  this.prev_SS_n                
  Row   4:          1  this.seq_item_cov.SS_n_1  this.prev_SS_n                

----------------Focused Condition View-------------------
Line       151 Item    1  (~this.seq_item_cov.SS_n && ~this.prev_SS_n)
Condition totals: 2 of 2 input terms covered = 100.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  this.seq_item_cov.SS_n         Y
          this.prev_SS_n         Y

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  this.seq_item_cov.SS_n_0  ~this.prev_SS_n               
  Row   2:          1  this.seq_item_cov.SS_n_1  -                             
  Row   3:          1  this.prev_SS_n_0          ~this.seq_item_cov.SS_n       
  Row   4:          1  this.prev_SS_n_1          ~this.seq_item_cov.SS_n       

----------------Focused Condition View-------------------
Line       155 Item    1  (~this.prev_SS_n && this.seq_item_cov.SS_n)
Condition totals: 1 of 2 input terms covered = 50.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
          this.prev_SS_n         Y
  this.seq_item_cov.SS_n         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  this.prev_SS_n_0          this.seq_item_cov.SS_n        
  Row   2:          1  this.prev_SS_n_1          -                             
  Row   3:    ***0***  this.seq_item_cov.SS_n_0  ~this.prev_SS_n               
  Row   4:          1  this.seq_item_cov.SS_n_1  ~this.prev_SS_n               

----------------Focused Condition View-------------------
Line       157 Item    1  (this.ss_n_low_count == 12)
Condition totals: 1 of 1 input term covered = 100.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (this.ss_n_low_count == 12)         Y

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:          1  (this.ss_n_low_count == 12)_0  -                             
  Row   2:          1  (this.ss_n_low_count == 12)_1  -                             

----------------Focused Condition View-------------------
Line       162 Item    1  (this.ss_n_low_count == 22)
Condition totals: 1 of 1 input term covered = 100.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (this.ss_n_low_count == 22)         Y

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:          1  (this.ss_n_low_count == 22)_0  -                             
  Row   2:          1  (this.ss_n_low_count == 22)_1  -                             

----------------Focused Condition View-------------------
Line       174 Item    1  (this.prev_SS_n && ~this.seq_item_cov.SS_n)
Condition totals: 2 of 2 input terms covered = 100.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
          this.prev_SS_n         Y
  this.seq_item_cov.SS_n         Y

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  this.prev_SS_n_0          -                             
  Row   2:          1  this.prev_SS_n_1          ~this.seq_item_cov.SS_n       
  Row   3:          1  this.seq_item_cov.SS_n_0  this.prev_SS_n                
  Row   4:          1  this.seq_item_cov.SS_n_1  this.prev_SS_n                

----------------Focused Condition View-------------------
Line       180 Item    1  (~this.seq_item_cov.SS_n && (this.mosi_bit_count < 3))
Condition totals: 2 of 2 input terms covered = 100.00%

                 Input Term   Covered  Reason for no coverage   Hint
                -----------  --------  -----------------------  --------------
     this.seq_item_cov.SS_n         Y
  (this.mosi_bit_count < 3)         Y

     Rows:       Hits  FEC Target                   Non-masking condition(s)      
 ---------  ---------  --------------------         -------------------------     
  Row   1:          1  this.seq_item_cov.SS_n_0     (this.mosi_bit_count < 3)     
  Row   2:          1  this.seq_item_cov.SS_n_1     -                             
  Row   3:          1  (this.mosi_bit_count < 3)_0  ~this.seq_item_cov.SS_n       
  Row   4:          1  (this.mosi_bit_count < 3)_1  ~this.seq_item_cov.SS_n       

----------------Focused Condition View-------------------
Line       185 Item    1  (this.mosi_bit_count == 3)
Condition totals: 1 of 1 input term covered = 100.00%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
  (this.mosi_bit_count == 3)         Y

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (this.mosi_bit_count == 3)_0  -                             
  Row   2:          1  (this.mosi_bit_count == 3)_1  -                             



Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          8        na        na        na
            Covergroup Bins         32        32         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /SPI_Slave_coverage_pkg/SPI_Slave_coverage/cvr_grp 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    32         32          -                      
    missing/total bins:                                     0         32          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_data_cvp                            100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rx_valid_cvp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rx_data_trans_cvp                      100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_cvp                               100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint normal_trans_cvp                       100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint extended_trans_cvp                     100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MOSI_cvp                               100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/SPI_Slave_coverage_pkg::SPI_Slave_coverage::cvr_grp  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    32         32          -                      
    missing/total bins:                                     0         32          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_data_cvp                            100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin addr_or_cmd                                  8711          1          -    Covered              
        bin write_data                                    380          1          -    Covered              
        bin read_addr                                     119          1          -    Covered              
        bin read_data                                     791          1          -    Covered              
    Coverpoint rx_valid_cvp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin valid                                         492          1          -    Covered              
        bin invalid                                      9509          1          -    Covered              
    Coverpoint rx_data_trans_cvp                      100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
        bin addr_to_write                                  43          1          -    Covered              
        bin addr_to_read_addr                              29          1          -    Covered              
        bin addr_to_read_data                              21          1          -    Covered              
        bin write_to_addr                                  41          1          -    Covered              
        bin write_to_read                                  33          1          -    Covered              
        bin read_addr_to_data                              33          1          -    Covered              
        bin read_data_to_addr                              25          1          -    Covered              
        bin read_data_to_read_addr                         28          1          -    Covered              
        bin same_addr                                      31          1          -    Covered              
        bin same_write                                     35          1          -    Covered              
        bin same_read_addr                                 29          1          -    Covered              
        bin same_read_data                                 26          1          -    Covered              
    Coverpoint SS_n_cvp                               100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin high                                         1441          1          -    Covered              
        bin low                                          8559          1          -    Covered              
        bin high_to_low                                   862          1          -    Covered              
        bin low_to_high                                   861          1          -    Covered              
    Coverpoint normal_trans_cvp                       100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin normal_transaction_done                       486          1          -    Covered              
    Coverpoint extended_trans_cvp                     100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin extended_transaction_done                      56          1          -    Covered              
    Coverpoint MOSI_cvp                               100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin invalid_cmd                             0                     -    ZERO                 
        bin write_addr                                   1337          1          -    Covered              
        bin write_data                                   1525          1          -    Covered              
        bin read_addr                                    1301          1          -    Covered              
        bin read_data                                    1948          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin write_addr_active                        1337          1          -    Covered              
            bin write_data_active                        1525          1          -    Covered              
            bin read_addr_active                         1301          1          -    Covered              
            bin read_data_active                         1948          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin inactive_dont_care                   0                     -    ZERO                 
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      43        38         5    88.37%

================================Statement Details================================

Statement Coverage for instance /SPI_Slave_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_coverage.sv
    1                                                package SPI_Slave_coverage_pkg;
    2                                                import uvm_pkg::*;
    3                                                import SPI_Slave_monitor_pkg::*;
    4                                                import SPI_Slave_seq_item_pkg::*;
    5                                                import shared_pkg::*;
    6                                                `include "uvm_macros.svh"
    7                                                
    8                                                class SPI_Slave_coverage extends uvm_component;
    9               1                    ***0***         `uvm_component_utils(SPI_Slave_coverage)
    9               2                    ***0***     
    9               3                          2     
    10                                                  
    11                                                   uvm_analysis_export #(SPI_Slave_seq_item) cov_export;
    12                                                   uvm_tlm_analysis_fifo #(SPI_Slave_seq_item) cov_fifo;
    13                                                   SPI_Slave_seq_item seq_item_cov;
    14                                               
    15                                                   // Variables to track SS_n transitions for sequence coverage
    16              1                          1         logic prev_SS_n = 1;
    17              1                          1         int ss_n_low_count = 0;
    18              1                          1         bit normal_transaction_complete = 0;
    19              1                          1         bit extended_transaction_complete = 0;
    20                                               
    21                                                   // Variable to track MOSI command bits (first 3 bits of transaction)
    22              1                          1         logic [2:0] mosi_cmd = 3'b000;
    23              1                          1         int mosi_bit_count = 0;
    24              1                          1         bit mosi_cmd_valid = 0;  // NEW: Flag to indicate valid command capture
    25                                               
    26                                                   covergroup cvr_grp;
    27                                               
    28                                                       // Constraint 1: Coverpoints on rx_data[9:8] - all possible values and transitions
    29                                                       rx_data_cvp: coverpoint seq_item_cov.rx_data[9:8] {
    30                                                           bins addr_or_cmd   = {2'b00};  // Address or command
    31                                                           bins write_data    = {2'b01};  // Write data
    32                                                           bins read_addr     = {2'b10};  // Read address
    33                                                           bins read_data     = {2'b11};  // Read data
    34                                                       }
    35                                               
    36                                                       rx_valid_cvp: coverpoint seq_item_cov.rx_valid {
    37                                                           bins valid   = {1};
    38                                                           bins invalid = {0};
    39                                                       }
    40                                               
    41                                                       // Transition coverage for rx_data[9:8]
    42                                                       rx_data_trans_cvp: coverpoint seq_item_cov.rx_data[9:8] iff (seq_item_cov.rx_valid == 1) {
    43                                                           bins addr_to_write     = (2'b00 => 2'b01);  // WRITE_ADDR -> WRITE_DATA
    44                                                           bins addr_to_read_addr = (2'b00 => 2'b10);  // WRITE_ADDR -> READ_ADDR
    45                                                           bins addr_to_read_data = (2'b00 => 2'b11);  // WRITE_ADDR -> READ_DATA
    46                                                           bins write_to_addr     = (2'b01 => 2'b00);  // WRITE_DATA -> WRITE_ADDR
    47                                                           bins write_to_read     = (2'b01 => 2'b10);  // WRITE_DATA -> READ_ADDR
    48                                                           bins read_addr_to_data = (2'b10 => 2'b11);  // READ_ADDR -> READ_DATA
    49                                                           bins read_data_to_addr = (2'b11 => 2'b00);  // READ_DATA -> WRITE_ADDR
    50                                                           bins read_data_to_read_addr = (2'b11 => 2'b10);  // READ_DATA -> READ_ADDR
    51                                                           bins same_addr         = (2'b00 => 2'b00);  // Repeated address
    52                                                           bins same_write        = (2'b01 => 2'b01);  // Repeated write
    53                                                           bins same_read_addr    = (2'b10 => 2'b10);  // Repeated read address
    54                                                           bins same_read_data    = (2'b11 => 2'b11);  // Repeated read data
    55                                                       }
    56                                               
    57                                                       // Constraint 2: SS_n transaction duration coverage
    58                                                       SS_n_cvp: coverpoint seq_item_cov.SS_n {
    59                                                           bins high = {1};
    60                                                           bins low  = {0};
    61                                                           bins high_to_low = (1 => 0);  // Transaction start
    62                                                           bins low_to_high = (0 => 1);  // Transaction end
    63                                                       }
    64                                               
    65                                                       // Normal transaction: 1 -> 0 [*13] -> 1
    66                                                       normal_trans_cvp: coverpoint normal_transaction_complete {
    67                                                           bins normal_transaction_done = {1};
    68                                                       }
    69                                               
    70                                                       // Extended transaction (READ_DATA): 1 -> 0 [*23] -> 1
    71                                                       extended_trans_cvp: coverpoint extended_transaction_complete {
    72                                                           bins extended_transaction_done = {1};
    73                                                       }
    74                                               
    75                                                       // Constraint 3: MOSI command validation (first 3 bits)
    76                                                       // ONLY sample when we have a valid command captured
    77                                                       MOSI_cvp: coverpoint mosi_cmd iff (mosi_cmd_valid) {
    78                                                           option.auto_bin_max = 0;
    79                                                           bins write_addr  = {3'b000};  // Write Address
    80                                                           bins write_data  = {3'b001};  // Write Data
    81                                                           bins read_addr   = {3'b110};  // Read Address
    82                                                           bins read_data   = {3'b111};  // Read Data
    83                                                           // Invalid commands
    84                                                           illegal_bins invalid_cmd = {3'b010, 3'b011, 3'b100, 3'b101};
    85                                                       }
    86                                               
    87                                                       // Constraint 4: Cross coverage between SS_n and MOSI
    88                                                       // ONLY cross when MOSI command is valid
    89                                                       cross SS_n_cvp, MOSI_cvp iff (mosi_cmd_valid) {
    90                                                           option.cross_auto_bin_max = 0;
    91                                                           // Only cover meaningful combinations during active transactions
    92                                                           // When SS_n is low (active), all valid commands should be covered
    93                                                           bins write_addr_active  = binsof(SS_n_cvp.low) && binsof(MOSI_cvp.write_addr);
    94                                                           bins write_data_active  = binsof(SS_n_cvp.low) && binsof(MOSI_cvp.write_data);
    95                                                           bins read_addr_active   = binsof(SS_n_cvp.low) && binsof(MOSI_cvp.read_addr);
    96                                                           bins read_data_active   = binsof(SS_n_cvp.low) && binsof(MOSI_cvp.read_data);
    97                                                           
    98                                                           // When SS_n is high (inactive), MOSI commands are don't care
    99                                                           // Exclude these to focus on legal operation scenarios
    100                                                          ignore_bins inactive_dont_care = binsof(SS_n_cvp.high);
    101                                                      }
    102                                              
    103                                                  endgroup
    104                                              
    105                                                  function new(string name = "SPI_Slave_coverage", uvm_component parent = null);
    106             1                          1             super.new(name, parent);
    107             1                          1             cvr_grp = new();
    108                                                  endfunction
    109                                              
    110                                                  function void build_phase(uvm_phase phase);
    111             1                          1             super.build_phase(phase);
    112             1                          1             cov_export = new("cov_export", this);
    113             1                          1             cov_fifo = new("cov_fifo", this);
    114                                                  endfunction
    115                                              
    116                                                  function void connect_phase(uvm_phase phase);
    117             1                          1             super.connect_phase(phase);
    118             1                          1             cov_export.connect(cov_fifo.analysis_export);
    119                                                  endfunction
    120                                              
    121                                                  task run_phase(uvm_phase phase);
    122             1                          1             super.run_phase(phase);
    123             1                          1             forever begin
    124             1                      10002                 cov_fifo.get(seq_item_cov);
    125                                                          
    126                                                          // Track SS_n sequence for transaction duration
    127             1                      10001                 track_ss_n_sequence();
    128                                                          
    129                                                          // Track MOSI command bits (first 3 bits of transaction)
    130             1                      10001                 track_mosi_command();
    131                                                          
    132                                                          // Sample coverage
    133             1                      10001                 cvr_grp.sample();
    134                                                          
    135                                                          // Update previous state
    136             1                      10001                 prev_SS_n = seq_item_cov.SS_n;
    137                                                      end
    138                                                  endtask
    139                                              
    140                                                  // Function to track SS_n sequences for normal and extended transactions
    141                                                  function void track_ss_n_sequence();
    142                                                      // Detect start of transaction (1 -> 0)
    143                                                      if (prev_SS_n == 1 && seq_item_cov.SS_n == 0) begin
    144             1                        862                 ss_n_low_count = 1;  // Start counting
    145             1                        862                 normal_transaction_complete = 0;
    146             1                        862                 extended_transaction_complete = 0;
    147             1                        862                 mosi_bit_count = 0;  // Reset MOSI bit counter
    148             1                        862                 mosi_cmd_valid = 0;  // Reset valid flag
    149                                                      end
    150                                                      // Count consecutive low cycles
    151                                                      else if (seq_item_cov.SS_n == 0 && prev_SS_n == 0) begin
    152             1                       7697                 ss_n_low_count++;
    153                                                      end
    154                                                      // Detect end of transaction (0 -> 1)
    155                                                      else if (prev_SS_n == 0 && seq_item_cov.SS_n == 1) begin
    156                                                          // Check if it matches normal transaction pattern (13 cycles low)
    157                                                          if (ss_n_low_count == 12) begin
    158             1                        396                     normal_transaction_complete = 1;
    159             1                    ***0***                     `uvm_info("COVERAGE", $sformatf("Normal transaction completed: SS_n low for %0d cycles", ss_n_low_count), UVM_HIGH)
    160                                                          end
    161                                                          // Check if it matches extended transaction pattern (23 cycles low)
    162                                                          else if (ss_n_low_count == 22) begin
    163             1                         50                     extended_transaction_complete = 1;
    164             1                    ***0***                     `uvm_info("COVERAGE", $sformatf("Extended transaction completed: SS_n low for %0d cycles", ss_n_low_count), UVM_HIGH)
    165                                                          end
    166             1                        861                 ss_n_low_count = 0;  // Reset counter
    167             1                        861                 mosi_cmd_valid = 0;  // Invalidate command after transaction ends
    168                                                      end
    169                                                  endfunction
    170                                              
    171                                                  // Function to track MOSI command (first 3 bits of transaction)
    172                                                  function void track_mosi_command();
    173                                                      // When SS_n goes low, start capturing MOSI bits
    174                                                      if (prev_SS_n == 1 && seq_item_cov.SS_n == 0) begin
    175             1                        862                 mosi_bit_count = 0;
    176             1                        862                 mosi_cmd = 3'b000;
    177             1                        862                 mosi_cmd_valid = 0;
    178                                                      end 
    179                                                      // Capture MOSI bits while SS_n is low and we haven't captured all 3 bits yet
    180                                                      else if (seq_item_cov.SS_n == 0 && mosi_bit_count < 3) begin
    181             1                       2329                 mosi_cmd[2 - mosi_bit_count] = seq_item_cov.MOSI;  // MSB first
    182             1                       2329                 mosi_bit_count++;
    183                                                          
    184                                                          // Mark command as valid once we've captured all 3 bits
    185                                                          if (mosi_bit_count == 3) begin
    186             1                        743                     mosi_cmd_valid = 1;
    187             1                    ***0***                     `uvm_info("COVERAGE", $sformatf("MOSI command captured: %3b", mosi_cmd), UVM_HIGH)


=================================================================================
=== Instance: /SPI_Slave_scoreboard_pkg
=== Design Unit: work.SPI_Slave_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        26        11        15    42.30%

================================Branch Details================================

Branch Coverage for instance /SPI_Slave_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_scoreboard.sv
------------------------------------IF Branch------------------------------------
    39                                     10001     Count coming in to IF
    39              1                    ***0***                  if( seq_item_sb.rx_valid != seq_item_sb.rx_valid_gm  ||  seq_item_sb.rx_data != seq_item_sb.rx_data_gm ||
    44              1                      10001     				else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    41                                   ***0***     Count coming in to IF
    41              1                    ***0***     					`uvm_error("run_phase", $sformatf("Comparsion Failed , Transaction recieved by the DUT: %s  ",seq_item_sb.convert2string()  ))
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    46                                     10001     Count coming in to IF
    46              1                    ***0***     					`uvm_info("run_phase",$sformatf("Correct shift_Reg out: %s",seq_item_sb.convert2string()),UVM_HIGH)
                                           10001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    60                                         1     Count coming in to IF
    60              1                          1             `uvm_info("REPORT", "==============================================", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    61                                         1     Count coming in to IF
    61              1                          1             `uvm_info("REPORT", "        SCOREBOARD FINAL REPORT", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    62                                         1     Count coming in to IF
    62              1                          1             `uvm_info("REPORT", "==============================================", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    63                                         1     Count coming in to IF
    63              1                          1             `uvm_info("REPORT", $sformatf("Total Successful Transactions: %0d", correct_count), UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    64                                         1     Count coming in to IF
    64              1                          1             `uvm_info("REPORT", $sformatf("Total Failed Transactions    : %0d", error_count), UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    65                                         1     Count coming in to IF
    65              1                          1             `uvm_info("REPORT", "==============================================", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    67                                         1     Count coming in to IF
    67              1                          1             if (error_count == 0) begin
    70              1                    ***0***             else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    68                                         1     Count coming in to IF
    68              1                          1                 `uvm_info("REPORT", "***          TEST PASSED          ***", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    71                                   ***0***     Count coming in to IF
    71              1                    ***0***                 `uvm_error("REPORT", "***          TEST FAILED          ***");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    73                                         1     Count coming in to IF
    73              1                          1             `uvm_info("REPORT", "==============================================", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       5         0         5     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_Slave_scoreboard_pkg --

  File SPI_Slave_scoreboard.sv
----------------Focused Condition View-------------------
Line       39 Item    1  ((this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_gm) || (this.seq_item_sb.rx_data != this.seq_item_sb.rx_data_gm) || (this.seq_item_sb.MISO != this.seq_item_sb.MISO_gm) || (this.seq_item_sb.cs_sva != this.seq_item_sb.cs_sva_gm))
Condition totals: 0 of 4 input terms covered = 0.00%

                                                   Input Term   Covered  Reason for no coverage   Hint
                                                  -----------  --------  -----------------------  --------------
  (this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_gm)         N  '_1' not hit             Hit '_1'
    (this.seq_item_sb.rx_data != this.seq_item_sb.rx_data_gm)         N  '_1' not hit             Hit '_1'
          (this.seq_item_sb.MISO != this.seq_item_sb.MISO_gm)         N  '_1' not hit             Hit '_1'
      (this.seq_item_sb.cs_sva != this.seq_item_sb.cs_sva_gm)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                     Non-masking condition(s)      
 ---------  ---------  --------------------                                           -------------------------     
  Row   1:          1  (this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_gm)_0  ~((this.seq_item_sb.rx_data != this.seq_item_sb.rx_data_gm) || ((this.seq_item_sb.MISO != this.seq_item_sb.MISO_gm) || (this.seq_item_sb.cs_sva != this.seq_item_sb.cs_sva_gm)))
  Row   2:    ***0***  (this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_gm)_1  -                             
  Row   3:          1  (this.seq_item_sb.rx_data != this.seq_item_sb.rx_data_gm)_0    (~(this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_gm) && ~((this.seq_item_sb.MISO != this.seq_item_sb.MISO_gm) || (this.seq_item_sb.cs_sva != this.seq_item_sb.cs_sva_gm)))
  Row   4:    ***0***  (this.seq_item_sb.rx_data != this.seq_item_sb.rx_data_gm)_1    ~(this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_gm)
  Row   5:          1  (this.seq_item_sb.MISO != this.seq_item_sb.MISO_gm)_0          (~(this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_gm) && ~(this.seq_item_sb.rx_data != this.seq_item_sb.rx_data_gm) && ~(this.seq_item_sb.cs_sva != this.seq_item_sb.cs_sva_gm))
  Row   6:    ***0***  (this.seq_item_sb.MISO != this.seq_item_sb.MISO_gm)_1          (~(this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_gm) && ~(this.seq_item_sb.rx_data != this.seq_item_sb.rx_data_gm))
  Row   7:          1  (this.seq_item_sb.cs_sva != this.seq_item_sb.cs_sva_gm)_0      (~(this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_gm) && ~(this.seq_item_sb.rx_data != this.seq_item_sb.rx_data_gm) && ~(this.seq_item_sb.MISO != this.seq_item_sb.MISO_gm))
  Row   8:    ***0***  (this.seq_item_sb.cs_sva != this.seq_item_sb.cs_sva_gm)_1      (~(this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_gm) && ~(this.seq_item_sb.rx_data != this.seq_item_sb.rx_data_gm) && ~(this.seq_item_sb.MISO != this.seq_item_sb.MISO_gm))

----------------Focused Condition View-------------------
Line       67 Item    1  (this.error_count == 0)
Condition totals: 0 of 1 input term covered = 0.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (this.error_count == 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:    ***0***  (this.error_count == 0)_0  -                             
  Row   2:          1  (this.error_count == 0)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      28        22         6    78.57%

================================Statement Details================================

Statement Coverage for instance /SPI_Slave_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_scoreboard.sv
    1                                                package SPI_Slave_scoreboard_pkg;
    2                                                import uvm_pkg::*;
    3                                                import SPI_Slave_monitor_pkg::*;
    4                                                import SPI_Slave_seq_item_pkg::*;
    5                                                import shared_pkg::*;
    6                                                `include "uvm_macros.svh"
    7                                                
    8                                                class SPI_Slave_scoreboard extends uvm_scoreboard;
    9               1                    ***0***         `uvm_component_utils(SPI_Slave_scoreboard) 
    9               2                    ***0***     
    9               3                          2     
    10                                                   uvm_analysis_export #(SPI_Slave_seq_item) sb_export;
    11                                                   uvm_tlm_analysis_fifo #(SPI_Slave_seq_item) sb_fifo;
    12                                                   SPI_Slave_seq_item seq_item_sb; 
    13                                               
    14              1                          1         int error_count = 0;
    15              1                          1         int correct_count = 0; 
    16                                               
    17                                               
    18                                                   function new(string name = "SPI_Slave_scoreboard", uvm_component parent = null);
    19              1                          1             super.new(name, parent);
    20                                                   endfunction : new
    21                                               
    22                                                   function void build_phase(uvm_phase phase); 
    23              1                          1             super.build_phase(phase); 
    24              1                          1             sb_export = new("sb_export", this); 
    25              1                          1             sb_fifo = new("sb_fifo", this); 
    26                                                       
    27                                                      
    28                                                   endfunction 
    29                                               
    30                                                   function void connect_phase(uvm_phase phase); 
    31              1                          1             super.connect_phase(phase); 
    32              1                          1             sb_export.connect(sb_fifo.analysis_export); 
    33                                                   endfunction
    34                                               
    35                                                   task run_phase(uvm_phase phase); 
    36              1                          1             super.run_phase(phase); 
    37              1                          1             forever begin
    38              1                      10002                 sb_fifo.get(seq_item_sb);
    39                                                            if( seq_item_sb.rx_valid != seq_item_sb.rx_valid_gm  ||  seq_item_sb.rx_data != seq_item_sb.rx_data_gm ||
    40                                                             seq_item_sb.MISO != seq_item_sb.MISO_gm || seq_item_sb.cs_sva != seq_item_sb.cs_sva_gm ) begin
    41              1                    ***0***     					`uvm_error("run_phase", $sformatf("Comparsion Failed , Transaction recieved by the DUT: %s  ",seq_item_sb.convert2string()  ))
    42              1                    ***0***     					error_count++;
    43                                               				end
    44                                               				else begin
    45              1                      10001     					correct_count++; 
    46              1                    ***0***     					`uvm_info("run_phase",$sformatf("Correct shift_Reg out: %s",seq_item_sb.convert2string()),UVM_HIGH)
    47                                               				end
    48                                                           
    49                                                           
    50                                                       end
    51                                                   endtask : run_phase 
    52                                               
    53                                                  
    54                                               
    55                                               
    56                                               
    57                                               
    58                                                   function void report_phase(uvm_phase phase);
    59              1                          1             super.report_phase(phase);
    60              1                          1             `uvm_info("REPORT", "==============================================", UVM_LOW);
    61              1                          1             `uvm_info("REPORT", "        SCOREBOARD FINAL REPORT", UVM_LOW);
    62              1                          1             `uvm_info("REPORT", "==============================================", UVM_LOW);
    63              1                          1             `uvm_info("REPORT", $sformatf("Total Successful Transactions: %0d", correct_count), UVM_LOW);
    64              1                          1             `uvm_info("REPORT", $sformatf("Total Failed Transactions    : %0d", error_count), UVM_LOW);
    65              1                          1             `uvm_info("REPORT", "==============================================", UVM_LOW);
    66                                                       
    67                                                       if (error_count == 0) begin
    68              1                          1                 `uvm_info("REPORT", "***          TEST PASSED          ***", UVM_LOW);
    69                                                       end
    70                                                       else begin
    71              1                    ***0***                 `uvm_error("REPORT", "***          TEST FAILED          ***");
    72                                                       end
    73              1                          1             `uvm_info("REPORT", "==============================================", UVM_LOW);


=================================================================================
=== Instance: /SPI_Slave_sequencer_pkg
=== Design Unit: work.SPI_Slave_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /SPI_Slave_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_sequencer.sv
    1                                                package SPI_Slave_sequencer_pkg;
    2                                                import SPI_Slave_seq_item_pkg::*;
    3                                                import shared_pkg::*;
    4                                                import uvm_pkg::*;
    5                                                `include "uvm_macros.svh"
    6                                                class SPI_Slave_sequencer extends uvm_sequencer #(SPI_Slave_seq_item);
    7               1                    ***0***     `uvm_component_utils(SPI_Slave_sequencer);
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                 function new(string name = "SPI_Slave_sequencer" , uvm_component parent = null);
    10              1                          1         super.new(name , parent);  


=================================================================================
=== Instance: /SPI_Slave_driver_pkg
=== Design Unit: work.SPI_Slave_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         6         2         4    33.33%

================================Branch Details================================

Branch Coverage for instance /SPI_Slave_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_driver.sv
------------------------------------IF Branch------------------------------------
    22                                         1     Count coming in to IF
    22              1                    ***0***             if (!uvm_config_db #(SPI_Slave_config)::get(this, "", "CFG", SPI_Slave_cfg)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              1                    ***0***                 `uvm_fatal("build_phase", "Driver - Unable to get configuration object")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    44                                     10001     Count coming in to IF
    44              1                    ***0***                 `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)
                                           10001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        16         4    80.00%

================================Statement Details================================

Statement Coverage for instance /SPI_Slave_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_driver.sv
    1                                                package SPI_Slave_driver_pkg;
    2                                                import uvm_pkg::*;
    3                                                import SPI_Slave_config_pkg::*;
    4                                                import SPI_Slave_seq_item_pkg::*;
    5                                                import shared_pkg::*;
    6                                                `include "uvm_macros.svh"
    7                                                
    8                                                class SPI_Slave_driver extends uvm_driver #(SPI_Slave_seq_item);
    9               1                    ***0***         `uvm_component_utils(SPI_Slave_driver)
    9               2                    ***0***     
    9               3                          2     
    10                                                   
    11                                                   virtual SPI_Slave_if SPI_Slave_vif;
    12                                                   SPI_Slave_seq_item stim_seq_item;
    13                                                   SPI_Slave_config SPI_Slave_cfg;
    14                                               
    15                                                   function new(string name = "SPI_Slave_driver", uvm_component parent = null);
    16              1                          1             super.new(name, parent);
    17                                                   endfunction
    18                                               
    19                                                   function void build_phase(uvm_phase phase);
    20              1                          1             super.build_phase(phase);
    21                                               
    22                                                       if (!uvm_config_db #(SPI_Slave_config)::get(this, "", "CFG", SPI_Slave_cfg)) begin
    23              1                    ***0***                 `uvm_fatal("build_phase", "Driver - Unable to get configuration object")
    24                                                       end
    25                                                   endfunction
    26                                               
    27                                                   function void connect_phase(uvm_phase phase);
    28              1                          1             super.connect_phase(phase);
    29              1                          1             SPI_Slave_vif = SPI_Slave_cfg.SPI_Slave_vif;
    30                                                   endfunction
    31                                               
    32                                                   task run_phase(uvm_phase phase);
    33              1                          1             super.run_phase(phase);
    34              1                          1             forever begin
    35              1                      10002                 stim_seq_item = SPI_Slave_seq_item::type_id::create("stim_seq_item");
    36              1                      10002                 seq_item_port.get_next_item(stim_seq_item);
    37              1                      10001                 SPI_Slave_vif.MOSI = stim_seq_item.MOSI;
    38              1                      10001                 SPI_Slave_vif.rst_n = stim_seq_item.rst_n;
    39              1                      10001                 SPI_Slave_vif.SS_n = stim_seq_item.SS_n;
    40              1                      10001                 SPI_Slave_vif.tx_valid = stim_seq_item.tx_valid;
    41              1                      10001                 SPI_Slave_vif.tx_data = stim_seq_item.tx_data;
    42              1                      10001                 @(negedge SPI_Slave_vif.clk);
    43              1                      10001                 seq_item_port.item_done();
    44              1                    ***0***                 `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH)


=================================================================================
=== Instance: /SPI_Slave_agent_pkg
=== Design Unit: work.SPI_Slave_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /SPI_Slave_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_agent.sv
------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***             if (!uvm_config_db #(SPI_Slave_config)::get(this, "", "CFG", SPI_Slave_cfg)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              1                    ***0***                 `uvm_fatal("build_phase", "Unable to get configuration object")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    31                                         1     Count coming in to IF
    31              1                          1             if (SPI_Slave_cfg.is_active == UVM_ACTIVE) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    43                                         1     Count coming in to IF
    43              1                          1             if (SPI_Slave_cfg.is_active == UVM_ACTIVE) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16        13         3    81.25%

================================Statement Details================================

Statement Coverage for instance /SPI_Slave_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_agent.sv
    1                                                package SPI_Slave_agent_pkg;
    2                                                import SPI_Slave_monitor_pkg::*;
    3                                                import SPI_Slave_driver_pkg::*;
    4                                                import SPI_Slave_sequencer_pkg::*;
    5                                                import SPI_Slave_config_pkg::*;
    6                                                import shared_pkg::*;
    7                                                import SPI_Slave_seq_item_pkg::*;
    8                                                import uvm_pkg::*;
    9                                                `include "uvm_macros.svh"
    10                                               class SPI_Slave_agent extends uvm_agent;
    11              1                    ***0***         `uvm_component_utils(SPI_Slave_agent)
    11              2                    ***0***     
    11              3                          2     
    12                                                   
    13                                                   SPI_Slave_sequencer sqr;
    14                                                   SPI_Slave_driver drv;
    15                                                   SPI_Slave_monitor mon;
    16                                                   SPI_Slave_config SPI_Slave_cfg;
    17                                                   uvm_analysis_port #(SPI_Slave_seq_item) agt_ap;
    18                                               
    19                                                   function new(string name = "SPI_Slave_agent", uvm_component parent = null);
    20              1                          1             super.new(name, parent);
    21                                                   endfunction
    22                                               
    23                                                   function void build_phase(uvm_phase phase);
    24              1                          1             super.build_phase(phase);
    25                                                       if (!uvm_config_db #(SPI_Slave_config)::get(this, "", "CFG", SPI_Slave_cfg)) begin
    26              1                    ***0***                 `uvm_fatal("build_phase", "Unable to get configuration object")
    27                                                       end
    28                                               
    29              1                          1             mon = SPI_Slave_monitor::type_id::create("mon", this);
    30              1                          1             agt_ap = new("agt_ap", this);
    31                                                       if (SPI_Slave_cfg.is_active == UVM_ACTIVE) begin
    32              1                          1             sqr = SPI_Slave_sequencer::type_id::create("sqr", this);
    33              1                          1             drv = SPI_Slave_driver::type_id::create("drv", this);
    34                                                       end
    35                                                   endfunction
    36                                               
    37                                                   function void connect_phase(uvm_phase phase);
    38              1                          1             super.connect_phase(phase);
    39              1                          1             mon.SPI_Slave_vif = SPI_Slave_cfg.SPI_Slave_vif;
    40              1                          1             mon.SPI_gm_vif = SPI_Slave_cfg.SPI_gm_vif;
    41              1                          1             mon.mon_ap.connect(agt_ap);
    42                                                       
    43                                                       if (SPI_Slave_cfg.is_active == UVM_ACTIVE) begin
    44              1                          1             drv.SPI_Slave_vif = SPI_Slave_cfg.SPI_Slave_vif;
    45              1                          1             drv.seq_item_port.connect(sqr.seq_item_export);


=================================================================================
=== Instance: /SPI_Slave_env_pkg
=== Design Unit: work.SPI_Slave_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /SPI_Slave_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_env.sv
    1                                                package SPI_Slave_env_pkg;
    2                                                import SPI_Slave_agent_pkg::*;
    3                                                import SPI_Slave_scoreboard_pkg::*;
    4                                                import SPI_Slave_coverage_pkg::*;
    5                                                import shared_pkg::*;
    6                                                import uvm_pkg::*;
    7                                                `include "uvm_macros.svh"
    8                                                
    9                                                class SPI_Slave_env extends uvm_env;
    10              1                    ***0***         `uvm_component_utils(SPI_Slave_env)
    10              2                    ***0***     
    10              3                          2     
    11                                               
    12                                                   SPI_Slave_agent agt;
    13                                                   SPI_Slave_scoreboard sb;
    14                                                   SPI_Slave_coverage cov;
    15                                               
    16                                                   function new(string name = "SPI_Slave_env", uvm_component parent = null);
    17              1                          1             super.new(name, parent);
    18                                                   endfunction
    19                                               
    20                                                   function void build_phase(uvm_phase phase);
    21              1                          1             super.build_phase(phase);
    22              1                          1             agt = SPI_Slave_agent::type_id::create("agt", this);
    23              1                          1             sb = SPI_Slave_scoreboard::type_id::create("sb", this);
    24              1                          1             cov = SPI_Slave_coverage::type_id::create("cov", this);
    25                                                   endfunction
    26                                               
    27                                                   function void connect_phase(uvm_phase phase);
    28              1                          1             super.connect_phase(phase);
    29              1                          1             agt.agt_ap.connect(sb.sb_export);
    30              1                          1             agt.agt_ap.connect(cov.cov_export);


=================================================================================
=== Instance: /SPI_Slave_test_pkg
=== Design Unit: work.SPI_Slave_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        16         6        10    37.50%

================================Branch Details================================

Branch Coverage for instance /SPI_Slave_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_test.sv
------------------------------------IF Branch------------------------------------
    33                                         1     Count coming in to IF
    33              1                    ***0***             if (!uvm_config_db #(virtual SPI_Slave_if)::get(this, "", "SPI_Slave_IF", SPI_Slave_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    34                                   ***0***     Count coming in to IF
    34              1                    ***0***                 `uvm_fatal("build_phase", "Test - Unable to get the virtual interface of the SPI_Slave from the uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    36                                         1     Count coming in to IF
    36              1                    ***0***             if (!uvm_config_db #(virtual SPI_gm_if)::get(this, "", "SPI_gm_IF", SPI_gm_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    37                                   ***0***     Count coming in to IF
    37              1                    ***0***                 `uvm_fatal("build_phase", "Test - Unable to get the virtual interface of the SPI_gm from the uvm_config_db")    
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                         1     Count coming in to IF
    50              1                          1             `uvm_info("run_phase", "Reset Asserted", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    52                                         1     Count coming in to IF
    52              1                          1             `uvm_info("run_phase", "Reset Deasserted", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    55                                         1     Count coming in to IF
    55              1                          1             `uvm_info("run_phase", "Stimulus Generation Started", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    57                                         1     Count coming in to IF
    57              1                          1             `uvm_info("run_phase", "Stimulus Generation Ended", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      24        20         4    83.33%

================================Statement Details================================

Statement Coverage for instance /SPI_Slave_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_Slave_test.sv
    1                                                package SPI_Slave_test_pkg;
    2                                                import SPI_Slave_env_pkg::*;
    3                                                import SPI_Slave_config_pkg::*;
    4                                                import uvm_pkg::*;
    5                                                import SPI_Slave_reset_seq_pkg::*;
    6                                                import SPI_Slave_main_seq_pkg::*;
    7                                                import shared_pkg::*;
    8                                                
    9                                                `include "uvm_macros.svh"
    10                                               
    11                                               
    12                                               class SPI_Slave_test extends uvm_test;
    13              1                    ***0***         `uvm_component_utils(SPI_Slave_test)
    13              2                    ***0***     
    13              3                          4     
    14                                                   
    15                                                   SPI_Slave_env env;
    16                                                   SPI_Slave_config SPI_Slave_cfg;
    17                                                   virtual SPI_Slave_if SPI_Slave_vif;
    18                                                   virtual SPI_gm_if SPI_gm_vif;
    19                                                   SPI_Slave_main_seq main_seq;
    20                                                   SPI_Slave_reset_seq reset_seq;
    21                                               
    22                                                   function new(string name = "SPI_Slave_test", uvm_component parent = null);
    23              1                          1             super.new(name, parent);
    24                                                   endfunction
    25                                               
    26                                                   function void build_phase(uvm_phase phase);
    27              1                          1             super.build_phase(phase);
    28              1                          1             env = SPI_Slave_env::type_id::create("env", this);
    29              1                          1             SPI_Slave_cfg = SPI_Slave_config::type_id::create("SPI_Slave_cfg", this);
    30              1                          1             main_seq = SPI_Slave_main_seq::type_id::create("main_seq", this);
    31              1                          1             reset_seq = SPI_Slave_reset_seq::type_id::create("reset_seq", this);
    32                                               
    33                                                       if (!uvm_config_db #(virtual SPI_Slave_if)::get(this, "", "SPI_Slave_IF", SPI_Slave_vif))
    34              1                    ***0***                 `uvm_fatal("build_phase", "Test - Unable to get the virtual interface of the SPI_Slave from the uvm_config_db")
    35                                               
    36                                                       if (!uvm_config_db #(virtual SPI_gm_if)::get(this, "", "SPI_gm_IF", SPI_gm_vif))
    37              1                    ***0***                 `uvm_fatal("build_phase", "Test - Unable to get the virtual interface of the SPI_gm from the uvm_config_db")    
    38                                               
    39              1                          1             SPI_Slave_cfg.SPI_Slave_vif = SPI_Slave_vif;
    40              1                          1             SPI_Slave_cfg.SPI_gm_vif = SPI_gm_vif;
    41              1                          1             SPI_Slave_cfg.is_active = UVM_ACTIVE;
    42              1                          1             uvm_config_db #(SPI_Slave_config)::set(this, "*", "CFG", SPI_Slave_cfg);
    43                                                   endfunction
    44                                               
    45                                                   task run_phase(uvm_phase phase);
    46              1                          1             super.run_phase(phase);
    47              1                          1             phase.raise_objection(this);
    48                                                       
    49                                                       //reset sequence
    50              1                          1             `uvm_info("run_phase", "Reset Asserted", UVM_LOW)
    51              1                          1             reset_seq.start(env.agt.sqr);
    52              1                          1             `uvm_info("run_phase", "Reset Deasserted", UVM_LOW)
    53                                               
    54                                                       //main sequence
    55              1                          1             `uvm_info("run_phase", "Stimulus Generation Started", UVM_LOW)
    56              1                          1             main_seq.start(env.agt.sqr);
    57              1                          1             `uvm_info("run_phase", "Stimulus Generation Ended", UVM_LOW)
    58                                                       
    59              1                          1             phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /SPI_Slave_coverage_pkg/SPI_Slave_coverage/cvr_grp 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    32         32          -                      
    missing/total bins:                                     0         32          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_data_cvp                            100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rx_valid_cvp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rx_data_trans_cvp                      100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_cvp                               100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint normal_trans_cvp                       100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint extended_trans_cvp                     100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MOSI_cvp                               100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/SPI_Slave_coverage_pkg::SPI_Slave_coverage::cvr_grp  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    32         32          -                      
    missing/total bins:                                     0         32          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_data_cvp                            100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin addr_or_cmd                                  8711          1          -    Covered              
        bin write_data                                    380          1          -    Covered              
        bin read_addr                                     119          1          -    Covered              
        bin read_data                                     791          1          -    Covered              
    Coverpoint rx_valid_cvp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin valid                                         492          1          -    Covered              
        bin invalid                                      9509          1          -    Covered              
    Coverpoint rx_data_trans_cvp                      100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
        bin addr_to_write                                  43          1          -    Covered              
        bin addr_to_read_addr                              29          1          -    Covered              
        bin addr_to_read_data                              21          1          -    Covered              
        bin write_to_addr                                  41          1          -    Covered              
        bin write_to_read                                  33          1          -    Covered              
        bin read_addr_to_data                              33          1          -    Covered              
        bin read_data_to_addr                              25          1          -    Covered              
        bin read_data_to_read_addr                         28          1          -    Covered              
        bin same_addr                                      31          1          -    Covered              
        bin same_write                                     35          1          -    Covered              
        bin same_read_addr                                 29          1          -    Covered              
        bin same_read_data                                 26          1          -    Covered              
    Coverpoint SS_n_cvp                               100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin high                                         1441          1          -    Covered              
        bin low                                          8559          1          -    Covered              
        bin high_to_low                                   862          1          -    Covered              
        bin low_to_high                                   861          1          -    Covered              
    Coverpoint normal_trans_cvp                       100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin normal_transaction_done                       486          1          -    Covered              
    Coverpoint extended_trans_cvp                     100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin extended_transaction_done                      56          1          -    Covered              
    Coverpoint MOSI_cvp                               100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin invalid_cmd                             0                     -    ZERO                 
        bin write_addr                                   1337          1          -    Covered              
        bin write_data                                   1525          1          -    Covered              
        bin read_addr                                    1301          1          -    Covered              
        bin read_data                                    1948          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin write_addr_active                        1337          1          -    Covered              
            bin write_data_active                        1525          1          -    Covered              
            bin read_addr_active                         1301          1          -    Covered              
            bin read_data_active                         1948          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin inactive_dont_care                   0                     -    ZERO                 

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/SVA/CP1_reset_outputs_low_cover SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(27)
                                                                               528 Covered   
/top/DUT/SVA/CP2_idle_to_chk_cmd_cover   SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(42)
                                                                               817 Covered   
/top/DUT/SVA/CP3_chk_cmd_valid_next_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(53)
                                                                               769 Covered   
/top/DUT/SVA/CP4_write_state_behavior_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(64)
                                                                              3510 Covered   
/top/DUT/SVA/CP5_read_add_state_behavior_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(75)
                                                                              3023 Covered   
/top/DUT/SVA/CP6_read_data_state_behavior_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(86)
                                                                               760 Covered   
/top/DUT/SVA/CP7_cmd_to_idle_on_ss_n_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(97)
                                                                               388 Covered   
/top/DUT/SVA/CP8_idle_rx_valid_low_cover SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(116)
                                                                              1363 Covered   
/top/DUT/SVA/CP9_rx_valid_single_cycle_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(127)
                                                                               459 Covered   
/top/DUT/SVA/CP10_rx_data_stable_when_idle_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(138)
                                                                               469 Covered   
/top/DUT/SVA/CP11_miso_tx_valid_cover    SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(159)
                                                                                21 Covered   
/top/DUT/SVA/CP12_rx_valid_only_when_active_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(174)
                                                                               459 Covered   
/top/DUT/SVA/CP13_rx_valid_low_on_idle_transition_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(185)
                                                                               767 Covered   
/top/DUT/SVA/CP14_fsm_valid_states_only_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(201)
                                                                              9473 Covered   
/top/DUT/SVA/CP15_reset_forces_idle_cover 
                                         SPI_Slave_SVA Verilog  SVA  SPI_Slave_SVA.sv(212)
                                                                               528 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 15

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/SVA/AP1_reset_outputs_low_assert
                     SPI_Slave_SVA.sv(22)               0          1
/top/DUT/SVA/AP2_idle_to_chk_cmd_assert
                     SPI_Slave_SVA.sv(37)               0          1
/top/DUT/SVA/AP3_chk_cmd_valid_next_assert
                     SPI_Slave_SVA.sv(48)               0          1
/top/DUT/SVA/AP4_write_state_behavior_assert
                     SPI_Slave_SVA.sv(59)               0          1
/top/DUT/SVA/AP5_read_add_state_behavior_assert
                     SPI_Slave_SVA.sv(70)               0          1
/top/DUT/SVA/AP6_read_data_state_behavior_assert
                     SPI_Slave_SVA.sv(81)               0          1
/top/DUT/SVA/AP7_cmd_to_idle_on_ss_n_assert
                     SPI_Slave_SVA.sv(92)               0          1
/top/DUT/SVA/AP8_idle_rx_valid_low_assert
                     SPI_Slave_SVA.sv(111)              0          1
/top/DUT/SVA/AP9_rx_valid_single_cycle_assert
                     SPI_Slave_SVA.sv(122)              0          1
/top/DUT/SVA/AP10_rx_data_stable_when_idle_assert
                     SPI_Slave_SVA.sv(133)              0          1
/top/DUT/SVA/AP11_miso_tx_valid_assert
                     SPI_Slave_SVA.sv(154)              0          1
/top/DUT/SVA/AP12_rx_valid_only_when_active_assert
                     SPI_Slave_SVA.sv(169)              0          1
/top/DUT/SVA/AP13_rx_valid_low_on_idle_transition_assert
                     SPI_Slave_SVA.sv(180)              0          1
/top/DUT/SVA/AP14_fsm_valid_states_only_assert
                     SPI_Slave_SVA.sv(196)              0          1
/top/DUT/SVA/AP15_reset_forces_idle_assert
                     SPI_Slave_SVA.sv(207)              0          1
/SPI_Slave_main_seq_pkg/SPI_Slave_main_seq/body/#ublk#190343959#15/immed__18
                     SPI_Slave_main_seq.sv(18)          0          1

Total Coverage By Instance (filtered view): 89.61%

